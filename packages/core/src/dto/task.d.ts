import { z } from 'zod';
export declare const TaskCategorySchema: z.ZodEnum<["CASE", "PERSONAL", "ADMIN", "BIZDEV"]>;
export type TaskCategory = z.infer<typeof TaskCategorySchema>;
export declare const TaskStatusSchema: z.ZodEnum<["PENDING", "IN_PROGRESS", "COMPLETED", "CANCELLED", "ON_HOLD"]>;
export type TaskStatus = z.infer<typeof TaskStatusSchema>;
export declare const TaskPrioritySchema: z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>;
export type TaskPriority = z.infer<typeof TaskPrioritySchema>;
export declare const RecurrenceConfigSchema: z.ZodObject<{
    pattern: z.ZodEnum<["DAILY", "WEEKLY", "MONTHLY", "YEARLY"]>;
    interval: z.ZodDefault<z.ZodNumber>;
    daysOfWeek: z.ZodOptional<z.ZodArray<z.ZodNumber, "many">>;
    dayOfMonth: z.ZodOptional<z.ZodNumber>;
    endDate: z.ZodOptional<z.ZodDate>;
    maxOccurrences: z.ZodOptional<z.ZodNumber>;
    timezone: z.ZodDefault<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    pattern: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY";
    interval: number;
    timezone: string;
    daysOfWeek?: number[] | undefined;
    dayOfMonth?: number | undefined;
    endDate?: Date | undefined;
    maxOccurrences?: number | undefined;
}, {
    pattern: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY";
    interval?: number | undefined;
    daysOfWeek?: number[] | undefined;
    dayOfMonth?: number | undefined;
    endDate?: Date | undefined;
    maxOccurrences?: number | undefined;
    timezone?: string | undefined;
}>;
export type RecurrenceConfig = z.infer<typeof RecurrenceConfigSchema>;
export declare const TaskSchema: z.ZodObject<{
    id: z.ZodString;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    category: z.ZodDefault<z.ZodEnum<["CASE", "PERSONAL", "ADMIN", "BIZDEV"]>>;
    status: z.ZodDefault<z.ZodEnum<["PENDING", "IN_PROGRESS", "COMPLETED", "CANCELLED", "ON_HOLD"]>>;
    priority: z.ZodDefault<z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>>;
    caseId: z.ZodOptional<z.ZodString>;
    assignedTo: z.ZodOptional<z.ZodString>;
    createdBy: z.ZodString;
    dueDate: z.ZodOptional<z.ZodDate>;
    completedAt: z.ZodOptional<z.ZodDate>;
    estimatedHours: z.ZodOptional<z.ZodNumber>;
    actualHours: z.ZodOptional<z.ZodNumber>;
    tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    attachments: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    isRecurring: z.ZodDefault<z.ZodBoolean>;
    recurringPattern: z.ZodOptional<z.ZodEnum<["DAILY", "WEEKLY", "MONTHLY", "YEARLY"]>>;
    recurrenceJSON: z.ZodOptional<z.ZodString>;
    parentTaskId: z.ZodOptional<z.ZodString>;
    dependencies: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    progress: z.ZodDefault<z.ZodNumber>;
    notes: z.ZodOptional<z.ZodString>;
    isConfidential: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD";
    createdAt: Date;
    updatedAt: Date;
    title: string;
    priority: "LOW" | "MEDIUM" | "HIGH" | "URGENT";
    tags: string[];
    isConfidential: boolean;
    createdBy: string;
    attachments: string[];
    category: "ADMIN" | "CASE" | "PERSONAL" | "BIZDEV";
    isRecurring: boolean;
    dependencies: string[];
    progress: number;
    description?: string | undefined;
    caseId?: string | undefined;
    notes?: string | undefined;
    assignedTo?: string | undefined;
    dueDate?: Date | undefined;
    completedAt?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    recurringPattern?: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY" | undefined;
    recurrenceJSON?: string | undefined;
    parentTaskId?: string | undefined;
}, {
    id: string;
    createdAt: Date;
    updatedAt: Date;
    title: string;
    createdBy: string;
    status?: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD" | undefined;
    description?: string | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    caseId?: string | undefined;
    tags?: string[] | undefined;
    isConfidential?: boolean | undefined;
    notes?: string | undefined;
    attachments?: string[] | undefined;
    category?: "ADMIN" | "CASE" | "PERSONAL" | "BIZDEV" | undefined;
    assignedTo?: string | undefined;
    dueDate?: Date | undefined;
    completedAt?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    isRecurring?: boolean | undefined;
    recurringPattern?: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY" | undefined;
    recurrenceJSON?: string | undefined;
    parentTaskId?: string | undefined;
    dependencies?: string[] | undefined;
    progress?: number | undefined;
}>;
export declare const CreateTaskSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    category: z.ZodDefault<z.ZodEnum<["CASE", "PERSONAL", "ADMIN", "BIZDEV"]>>;
    status: z.ZodDefault<z.ZodEnum<["PENDING", "IN_PROGRESS", "COMPLETED", "CANCELLED", "ON_HOLD"]>>;
    priority: z.ZodDefault<z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>>;
    caseId: z.ZodOptional<z.ZodString>;
    assignedTo: z.ZodOptional<z.ZodString>;
    createdBy: z.ZodString;
    dueDate: z.ZodOptional<z.ZodDate>;
    completedAt: z.ZodOptional<z.ZodDate>;
    estimatedHours: z.ZodOptional<z.ZodNumber>;
    actualHours: z.ZodOptional<z.ZodNumber>;
    tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    attachments: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    isRecurring: z.ZodDefault<z.ZodBoolean>;
    recurringPattern: z.ZodOptional<z.ZodEnum<["DAILY", "WEEKLY", "MONTHLY", "YEARLY"]>>;
    recurrenceJSON: z.ZodOptional<z.ZodString>;
    parentTaskId: z.ZodOptional<z.ZodString>;
    dependencies: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    progress: z.ZodDefault<z.ZodNumber>;
    notes: z.ZodOptional<z.ZodString>;
    isConfidential: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "id" | "createdAt" | "updatedAt" | "completedAt">, "strip", z.ZodTypeAny, {
    status: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD";
    title: string;
    priority: "LOW" | "MEDIUM" | "HIGH" | "URGENT";
    tags: string[];
    isConfidential: boolean;
    createdBy: string;
    attachments: string[];
    category: "ADMIN" | "CASE" | "PERSONAL" | "BIZDEV";
    isRecurring: boolean;
    dependencies: string[];
    progress: number;
    description?: string | undefined;
    caseId?: string | undefined;
    notes?: string | undefined;
    assignedTo?: string | undefined;
    dueDate?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    recurringPattern?: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY" | undefined;
    recurrenceJSON?: string | undefined;
    parentTaskId?: string | undefined;
}, {
    title: string;
    createdBy: string;
    status?: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD" | undefined;
    description?: string | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    caseId?: string | undefined;
    tags?: string[] | undefined;
    isConfidential?: boolean | undefined;
    notes?: string | undefined;
    attachments?: string[] | undefined;
    category?: "ADMIN" | "CASE" | "PERSONAL" | "BIZDEV" | undefined;
    assignedTo?: string | undefined;
    dueDate?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    isRecurring?: boolean | undefined;
    recurringPattern?: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY" | undefined;
    recurrenceJSON?: string | undefined;
    parentTaskId?: string | undefined;
    dependencies?: string[] | undefined;
    progress?: number | undefined;
}>;
export declare const UpdateTaskSchema: z.ZodObject<{
    status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["PENDING", "IN_PROGRESS", "COMPLETED", "CANCELLED", "ON_HOLD"]>>>;
    title: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    priority: z.ZodOptional<z.ZodDefault<z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>>>;
    caseId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    tags: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    isConfidential: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    notes: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    createdBy: z.ZodOptional<z.ZodString>;
    attachments: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    category: z.ZodOptional<z.ZodDefault<z.ZodEnum<["CASE", "PERSONAL", "ADMIN", "BIZDEV"]>>>;
    assignedTo: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    dueDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    estimatedHours: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    actualHours: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    isRecurring: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    recurringPattern: z.ZodOptional<z.ZodOptional<z.ZodEnum<["DAILY", "WEEKLY", "MONTHLY", "YEARLY"]>>>;
    recurrenceJSON: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    parentTaskId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    dependencies: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    progress: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
}, "strip", z.ZodTypeAny, {
    status?: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD" | undefined;
    title?: string | undefined;
    description?: string | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    caseId?: string | undefined;
    tags?: string[] | undefined;
    isConfidential?: boolean | undefined;
    notes?: string | undefined;
    createdBy?: string | undefined;
    attachments?: string[] | undefined;
    category?: "ADMIN" | "CASE" | "PERSONAL" | "BIZDEV" | undefined;
    assignedTo?: string | undefined;
    dueDate?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    isRecurring?: boolean | undefined;
    recurringPattern?: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY" | undefined;
    recurrenceJSON?: string | undefined;
    parentTaskId?: string | undefined;
    dependencies?: string[] | undefined;
    progress?: number | undefined;
}, {
    status?: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD" | undefined;
    title?: string | undefined;
    description?: string | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    caseId?: string | undefined;
    tags?: string[] | undefined;
    isConfidential?: boolean | undefined;
    notes?: string | undefined;
    createdBy?: string | undefined;
    attachments?: string[] | undefined;
    category?: "ADMIN" | "CASE" | "PERSONAL" | "BIZDEV" | undefined;
    assignedTo?: string | undefined;
    dueDate?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    isRecurring?: boolean | undefined;
    recurringPattern?: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY" | undefined;
    recurrenceJSON?: string | undefined;
    parentTaskId?: string | undefined;
    dependencies?: string[] | undefined;
    progress?: number | undefined;
}>;
export declare const TaskSearchSchema: z.ZodObject<{
    query: z.ZodOptional<z.ZodString>;
    category: z.ZodOptional<z.ZodEnum<["CASE", "PERSONAL", "ADMIN", "BIZDEV"]>>;
    status: z.ZodOptional<z.ZodEnum<["PENDING", "IN_PROGRESS", "COMPLETED", "CANCELLED", "ON_HOLD"]>>;
    priority: z.ZodOptional<z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>>;
    caseId: z.ZodOptional<z.ZodString>;
    assignedTo: z.ZodOptional<z.ZodString>;
    createdBy: z.ZodOptional<z.ZodString>;
    dueDateFrom: z.ZodOptional<z.ZodDate>;
    dueDateTo: z.ZodOptional<z.ZodDate>;
    isRecurring: z.ZodOptional<z.ZodBoolean>;
    parentTaskId: z.ZodOptional<z.ZodString>;
    isConfidential: z.ZodOptional<z.ZodBoolean>;
    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    limit: z.ZodDefault<z.ZodNumber>;
    offset: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    limit: number;
    offset: number;
    query?: string | undefined;
    status?: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD" | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    caseId?: string | undefined;
    tags?: string[] | undefined;
    isConfidential?: boolean | undefined;
    createdBy?: string | undefined;
    category?: "ADMIN" | "CASE" | "PERSONAL" | "BIZDEV" | undefined;
    assignedTo?: string | undefined;
    isRecurring?: boolean | undefined;
    parentTaskId?: string | undefined;
    dueDateFrom?: Date | undefined;
    dueDateTo?: Date | undefined;
}, {
    query?: string | undefined;
    status?: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD" | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    caseId?: string | undefined;
    tags?: string[] | undefined;
    isConfidential?: boolean | undefined;
    limit?: number | undefined;
    offset?: number | undefined;
    createdBy?: string | undefined;
    category?: "ADMIN" | "CASE" | "PERSONAL" | "BIZDEV" | undefined;
    assignedTo?: string | undefined;
    isRecurring?: boolean | undefined;
    parentTaskId?: string | undefined;
    dueDateFrom?: Date | undefined;
    dueDateTo?: Date | undefined;
}>;
export declare const TaskListSchema: z.ZodObject<{
    id: z.ZodString;
    title: z.ZodString;
    category: z.ZodEnum<["CASE", "PERSONAL", "ADMIN", "BIZDEV"]>;
    status: z.ZodEnum<["PENDING", "IN_PROGRESS", "COMPLETED", "CANCELLED", "ON_HOLD"]>;
    priority: z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>;
    caseId: z.ZodOptional<z.ZodString>;
    assignedTo: z.ZodOptional<z.ZodString>;
    createdBy: z.ZodString;
    dueDate: z.ZodOptional<z.ZodDate>;
    completedAt: z.ZodOptional<z.ZodDate>;
    progress: z.ZodNumber;
    createdAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD";
    createdAt: Date;
    title: string;
    priority: "LOW" | "MEDIUM" | "HIGH" | "URGENT";
    createdBy: string;
    category: "ADMIN" | "CASE" | "PERSONAL" | "BIZDEV";
    progress: number;
    caseId?: string | undefined;
    assignedTo?: string | undefined;
    dueDate?: Date | undefined;
    completedAt?: Date | undefined;
}, {
    id: string;
    status: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD";
    createdAt: Date;
    title: string;
    priority: "LOW" | "MEDIUM" | "HIGH" | "URGENT";
    createdBy: string;
    category: "ADMIN" | "CASE" | "PERSONAL" | "BIZDEV";
    progress: number;
    caseId?: string | undefined;
    assignedTo?: string | undefined;
    dueDate?: Date | undefined;
    completedAt?: Date | undefined;
}>;
export declare const TaskWithAssigneeSchema: z.ZodObject<{
    id: z.ZodString;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    category: z.ZodDefault<z.ZodEnum<["CASE", "PERSONAL", "ADMIN", "BIZDEV"]>>;
    status: z.ZodDefault<z.ZodEnum<["PENDING", "IN_PROGRESS", "COMPLETED", "CANCELLED", "ON_HOLD"]>>;
    priority: z.ZodDefault<z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>>;
    caseId: z.ZodOptional<z.ZodString>;
    assignedTo: z.ZodOptional<z.ZodString>;
    createdBy: z.ZodString;
    dueDate: z.ZodOptional<z.ZodDate>;
    completedAt: z.ZodOptional<z.ZodDate>;
    estimatedHours: z.ZodOptional<z.ZodNumber>;
    actualHours: z.ZodOptional<z.ZodNumber>;
    tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    attachments: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    isRecurring: z.ZodDefault<z.ZodBoolean>;
    recurringPattern: z.ZodOptional<z.ZodEnum<["DAILY", "WEEKLY", "MONTHLY", "YEARLY"]>>;
    recurrenceJSON: z.ZodOptional<z.ZodString>;
    parentTaskId: z.ZodOptional<z.ZodString>;
    dependencies: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    progress: z.ZodDefault<z.ZodNumber>;
    notes: z.ZodOptional<z.ZodString>;
    isConfidential: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
} & {
    assignee: z.ZodOptional<z.ZodObject<{
        id: z.ZodString;
        firstName: z.ZodString;
        lastName: z.ZodString;
        email: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    }, {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    }>>;
    creator: z.ZodObject<{
        id: z.ZodString;
        firstName: z.ZodString;
        lastName: z.ZodString;
        email: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    }, {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    }>;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD";
    createdAt: Date;
    updatedAt: Date;
    title: string;
    priority: "LOW" | "MEDIUM" | "HIGH" | "URGENT";
    tags: string[];
    isConfidential: boolean;
    createdBy: string;
    attachments: string[];
    creator: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    };
    category: "ADMIN" | "CASE" | "PERSONAL" | "BIZDEV";
    isRecurring: boolean;
    dependencies: string[];
    progress: number;
    description?: string | undefined;
    caseId?: string | undefined;
    notes?: string | undefined;
    assignedTo?: string | undefined;
    dueDate?: Date | undefined;
    completedAt?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    recurringPattern?: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY" | undefined;
    recurrenceJSON?: string | undefined;
    parentTaskId?: string | undefined;
    assignee?: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    } | undefined;
}, {
    id: string;
    createdAt: Date;
    updatedAt: Date;
    title: string;
    createdBy: string;
    creator: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    };
    status?: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD" | undefined;
    description?: string | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    caseId?: string | undefined;
    tags?: string[] | undefined;
    isConfidential?: boolean | undefined;
    notes?: string | undefined;
    attachments?: string[] | undefined;
    category?: "ADMIN" | "CASE" | "PERSONAL" | "BIZDEV" | undefined;
    assignedTo?: string | undefined;
    dueDate?: Date | undefined;
    completedAt?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    isRecurring?: boolean | undefined;
    recurringPattern?: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY" | undefined;
    recurrenceJSON?: string | undefined;
    parentTaskId?: string | undefined;
    dependencies?: string[] | undefined;
    progress?: number | undefined;
    assignee?: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    } | undefined;
}>;
export declare const TaskWithCaseSchema: z.ZodObject<{
    id: z.ZodString;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    category: z.ZodDefault<z.ZodEnum<["CASE", "PERSONAL", "ADMIN", "BIZDEV"]>>;
    status: z.ZodDefault<z.ZodEnum<["PENDING", "IN_PROGRESS", "COMPLETED", "CANCELLED", "ON_HOLD"]>>;
    priority: z.ZodDefault<z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>>;
    caseId: z.ZodOptional<z.ZodString>;
    assignedTo: z.ZodOptional<z.ZodString>;
    createdBy: z.ZodString;
    dueDate: z.ZodOptional<z.ZodDate>;
    completedAt: z.ZodOptional<z.ZodDate>;
    estimatedHours: z.ZodOptional<z.ZodNumber>;
    actualHours: z.ZodOptional<z.ZodNumber>;
    tags: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    attachments: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    isRecurring: z.ZodDefault<z.ZodBoolean>;
    recurringPattern: z.ZodOptional<z.ZodEnum<["DAILY", "WEEKLY", "MONTHLY", "YEARLY"]>>;
    recurrenceJSON: z.ZodOptional<z.ZodString>;
    parentTaskId: z.ZodOptional<z.ZodString>;
    dependencies: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    progress: z.ZodDefault<z.ZodNumber>;
    notes: z.ZodOptional<z.ZodString>;
    isConfidential: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
} & {
    case: z.ZodOptional<z.ZodObject<{
        id: z.ZodString;
        caseNumber: z.ZodString;
        title: z.ZodString;
        status: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        status: string;
        caseNumber: string;
        title: string;
    }, {
        id: string;
        status: string;
        caseNumber: string;
        title: string;
    }>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD";
    createdAt: Date;
    updatedAt: Date;
    title: string;
    priority: "LOW" | "MEDIUM" | "HIGH" | "URGENT";
    tags: string[];
    isConfidential: boolean;
    createdBy: string;
    attachments: string[];
    category: "ADMIN" | "CASE" | "PERSONAL" | "BIZDEV";
    isRecurring: boolean;
    dependencies: string[];
    progress: number;
    case?: {
        id: string;
        status: string;
        caseNumber: string;
        title: string;
    } | undefined;
    description?: string | undefined;
    caseId?: string | undefined;
    notes?: string | undefined;
    assignedTo?: string | undefined;
    dueDate?: Date | undefined;
    completedAt?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    recurringPattern?: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY" | undefined;
    recurrenceJSON?: string | undefined;
    parentTaskId?: string | undefined;
}, {
    id: string;
    createdAt: Date;
    updatedAt: Date;
    title: string;
    createdBy: string;
    case?: {
        id: string;
        status: string;
        caseNumber: string;
        title: string;
    } | undefined;
    status?: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD" | undefined;
    description?: string | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    caseId?: string | undefined;
    tags?: string[] | undefined;
    isConfidential?: boolean | undefined;
    notes?: string | undefined;
    attachments?: string[] | undefined;
    category?: "ADMIN" | "CASE" | "PERSONAL" | "BIZDEV" | undefined;
    assignedTo?: string | undefined;
    dueDate?: Date | undefined;
    completedAt?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    isRecurring?: boolean | undefined;
    recurringPattern?: "DAILY" | "WEEKLY" | "MONTHLY" | "YEARLY" | undefined;
    recurrenceJSON?: string | undefined;
    parentTaskId?: string | undefined;
    dependencies?: string[] | undefined;
    progress?: number | undefined;
}>;
export declare const TaskAssignmentSchema: z.ZodObject<{
    taskId: z.ZodString;
    assignedTo: z.ZodString;
    dueDate: z.ZodOptional<z.ZodDate>;
    notes: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    assignedTo: string;
    taskId: string;
    notes?: string | undefined;
    dueDate?: Date | undefined;
}, {
    assignedTo: string;
    taskId: string;
    notes?: string | undefined;
    dueDate?: Date | undefined;
}>;
export declare const TaskStatusUpdateSchema: z.ZodObject<{
    taskId: z.ZodString;
    status: z.ZodEnum<["PENDING", "IN_PROGRESS", "COMPLETED", "CANCELLED", "ON_HOLD"]>;
    progress: z.ZodOptional<z.ZodNumber>;
    notes: z.ZodOptional<z.ZodString>;
    actualHours: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    status: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD";
    taskId: string;
    notes?: string | undefined;
    actualHours?: number | undefined;
    progress?: number | undefined;
}, {
    status: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD";
    taskId: string;
    notes?: string | undefined;
    actualHours?: number | undefined;
    progress?: number | undefined;
}>;
export declare const TaskCompletionSchema: z.ZodObject<{
    taskId: z.ZodString;
    completedAt: z.ZodDefault<z.ZodDate>;
    actualHours: z.ZodOptional<z.ZodNumber>;
    completionNotes: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    completedAt: Date;
    taskId: string;
    actualHours?: number | undefined;
    completionNotes?: string | undefined;
}, {
    taskId: string;
    completedAt?: Date | undefined;
    actualHours?: number | undefined;
    completionNotes?: string | undefined;
}>;
export declare const PendingTaskFiltersSchema: z.ZodObject<{
    userId: z.ZodString;
    categories: z.ZodOptional<z.ZodArray<z.ZodEnum<["CASE", "PERSONAL", "ADMIN", "BIZDEV"]>, "many">>;
    priorities: z.ZodOptional<z.ZodArray<z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>, "many">>;
    statuses: z.ZodOptional<z.ZodArray<z.ZodEnum<["PENDING", "IN_PROGRESS", "COMPLETED", "CANCELLED", "ON_HOLD"]>, "many">>;
    dueDateFrom: z.ZodOptional<z.ZodDate>;
    dueDateTo: z.ZodOptional<z.ZodDate>;
    overdue: z.ZodOptional<z.ZodBoolean>;
    teamId: z.ZodOptional<z.ZodString>;
    caseId: z.ZodOptional<z.ZodString>;
    includeCompleted: z.ZodDefault<z.ZodBoolean>;
    limit: z.ZodDefault<z.ZodNumber>;
    offset: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    userId: string;
    limit: number;
    offset: number;
    includeCompleted: boolean;
    caseId?: string | undefined;
    teamId?: string | undefined;
    overdue?: boolean | undefined;
    dueDateFrom?: Date | undefined;
    dueDateTo?: Date | undefined;
    categories?: ("ADMIN" | "CASE" | "PERSONAL" | "BIZDEV")[] | undefined;
    priorities?: ("LOW" | "MEDIUM" | "HIGH" | "URGENT")[] | undefined;
    statuses?: ("PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD")[] | undefined;
}, {
    userId: string;
    caseId?: string | undefined;
    teamId?: string | undefined;
    limit?: number | undefined;
    offset?: number | undefined;
    overdue?: boolean | undefined;
    dueDateFrom?: Date | undefined;
    dueDateTo?: Date | undefined;
    categories?: ("ADMIN" | "CASE" | "PERSONAL" | "BIZDEV")[] | undefined;
    priorities?: ("LOW" | "MEDIUM" | "HIGH" | "URGENT")[] | undefined;
    statuses?: ("PENDING" | "IN_PROGRESS" | "COMPLETED" | "CANCELLED" | "ON_HOLD")[] | undefined;
    includeCompleted?: boolean | undefined;
}>;
export type PendingTaskFilters = z.infer<typeof PendingTaskFiltersSchema>;
export declare const TaskStatisticsSchema: z.ZodObject<{
    total: z.ZodNumber;
    pending: z.ZodNumber;
    inProgress: z.ZodNumber;
    completed: z.ZodNumber;
    cancelled: z.ZodNumber;
    onHold: z.ZodNumber;
    overdue: z.ZodNumber;
    byCategory: z.ZodObject<{
        case: z.ZodNumber;
        personal: z.ZodNumber;
        admin: z.ZodNumber;
        bizdev: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        case: number;
        admin: number;
        personal: number;
        bizdev: number;
    }, {
        case: number;
        admin: number;
        personal: number;
        bizdev: number;
    }>;
    byPriority: z.ZodObject<{
        low: z.ZodNumber;
        medium: z.ZodNumber;
        high: z.ZodNumber;
        urgent: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        low: number;
        medium: number;
        high: number;
        urgent: number;
    }, {
        low: number;
        medium: number;
        high: number;
        urgent: number;
    }>;
}, "strip", z.ZodTypeAny, {
    total: number;
    inProgress: number;
    byPriority: {
        low: number;
        medium: number;
        high: number;
        urgent: number;
    };
    completed: number;
    cancelled: number;
    overdue: number;
    pending: number;
    onHold: number;
    byCategory: {
        case: number;
        admin: number;
        personal: number;
        bizdev: number;
    };
}, {
    total: number;
    inProgress: number;
    byPriority: {
        low: number;
        medium: number;
        high: number;
        urgent: number;
    };
    completed: number;
    cancelled: number;
    overdue: number;
    pending: number;
    onHold: number;
    byCategory: {
        case: number;
        admin: number;
        personal: number;
        bizdev: number;
    };
}>;
export type Task = z.infer<typeof TaskSchema>;
export type CreateTask = z.infer<typeof CreateTaskSchema>;
export type UpdateTask = z.infer<typeof UpdateTaskSchema>;
export type TaskSearch = z.infer<typeof TaskSearchSchema>;
export type TaskList = z.infer<typeof TaskListSchema>;
export type TaskWithAssignee = z.infer<typeof TaskWithAssigneeSchema>;
export type TaskWithCase = z.infer<typeof TaskWithCaseSchema>;
export type TaskAssignment = z.infer<typeof TaskAssignmentSchema>;
export type TaskStatusUpdate = z.infer<typeof TaskStatusUpdateSchema>;
export type TaskCompletion = z.infer<typeof TaskCompletionSchema>;
export type PendingTaskFilters = z.infer<typeof PendingTaskFiltersSchema>;
export type TaskStatistics = z.infer<typeof TaskStatisticsSchema>;
//# sourceMappingURL=task.d.ts.map