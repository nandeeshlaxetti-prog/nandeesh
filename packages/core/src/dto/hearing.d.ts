import { z } from 'zod';
export declare const HearingStatusSchema: z.ZodEnum<["SCHEDULED", "IN_PROGRESS", "COMPLETED", "CANCELLED", "POSTPONED"]>;
export type HearingStatus = z.infer<typeof HearingStatusSchema>;
export declare const HearingTypeSchema: z.ZodEnum<["FIRST_HEARING", "ARGUMENTS", "EVIDENCE", "JUDGMENT", "EXECUTION", "MEDIATION", "ARBITRATION", "APPEAL", "REVIEW", "OTHER"]>;
export type HearingType = z.infer<typeof HearingTypeSchema>;
export declare const HearingSchema: z.ZodObject<{
    id: z.ZodString;
    caseId: z.ZodString;
    hearingNumber: z.ZodString;
    type: z.ZodDefault<z.ZodEnum<["FIRST_HEARING", "ARGUMENTS", "EVIDENCE", "JUDGMENT", "EXECUTION", "MEDIATION", "ARBITRATION", "APPEAL", "REVIEW", "OTHER"]>>;
    status: z.ZodDefault<z.ZodEnum<["SCHEDULED", "IN_PROGRESS", "COMPLETED", "CANCELLED", "POSTPONED"]>>;
    scheduledDate: z.ZodDate;
    scheduledTime: z.ZodString;
    duration: z.ZodDefault<z.ZodNumber>;
    courtName: z.ZodString;
    courtLocation: z.ZodOptional<z.ZodString>;
    judgeName: z.ZodOptional<z.ZodString>;
    courtroom: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    agenda: z.ZodOptional<z.ZodString>;
    attendees: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    documents: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    outcome: z.ZodOptional<z.ZodString>;
    nextHearingDate: z.ZodOptional<z.ZodDate>;
    notes: z.ZodOptional<z.ZodString>;
    isConfidential: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED";
    type: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW";
    createdAt: Date;
    updatedAt: Date;
    caseId: string;
    courtName: string;
    isConfidential: boolean;
    hearingNumber: string;
    scheduledDate: Date;
    scheduledTime: string;
    duration: number;
    attendees: string[];
    documents: string[];
    description?: string | undefined;
    courtLocation?: string | undefined;
    notes?: string | undefined;
    judgeName?: string | undefined;
    courtroom?: string | undefined;
    agenda?: string | undefined;
    outcome?: string | undefined;
    nextHearingDate?: Date | undefined;
}, {
    id: string;
    createdAt: Date;
    updatedAt: Date;
    caseId: string;
    courtName: string;
    hearingNumber: string;
    scheduledDate: Date;
    scheduledTime: string;
    status?: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED" | undefined;
    type?: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW" | undefined;
    description?: string | undefined;
    courtLocation?: string | undefined;
    isConfidential?: boolean | undefined;
    notes?: string | undefined;
    duration?: number | undefined;
    judgeName?: string | undefined;
    courtroom?: string | undefined;
    agenda?: string | undefined;
    attendees?: string[] | undefined;
    documents?: string[] | undefined;
    outcome?: string | undefined;
    nextHearingDate?: Date | undefined;
}>;
export declare const CreateHearingSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    caseId: z.ZodString;
    hearingNumber: z.ZodString;
    type: z.ZodDefault<z.ZodEnum<["FIRST_HEARING", "ARGUMENTS", "EVIDENCE", "JUDGMENT", "EXECUTION", "MEDIATION", "ARBITRATION", "APPEAL", "REVIEW", "OTHER"]>>;
    status: z.ZodDefault<z.ZodEnum<["SCHEDULED", "IN_PROGRESS", "COMPLETED", "CANCELLED", "POSTPONED"]>>;
    scheduledDate: z.ZodDate;
    scheduledTime: z.ZodString;
    duration: z.ZodDefault<z.ZodNumber>;
    courtName: z.ZodString;
    courtLocation: z.ZodOptional<z.ZodString>;
    judgeName: z.ZodOptional<z.ZodString>;
    courtroom: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    agenda: z.ZodOptional<z.ZodString>;
    attendees: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    documents: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    outcome: z.ZodOptional<z.ZodString>;
    nextHearingDate: z.ZodOptional<z.ZodDate>;
    notes: z.ZodOptional<z.ZodString>;
    isConfidential: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    status: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED";
    type: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW";
    caseId: string;
    courtName: string;
    isConfidential: boolean;
    hearingNumber: string;
    scheduledDate: Date;
    scheduledTime: string;
    duration: number;
    attendees: string[];
    documents: string[];
    description?: string | undefined;
    courtLocation?: string | undefined;
    notes?: string | undefined;
    judgeName?: string | undefined;
    courtroom?: string | undefined;
    agenda?: string | undefined;
    outcome?: string | undefined;
    nextHearingDate?: Date | undefined;
}, {
    caseId: string;
    courtName: string;
    hearingNumber: string;
    scheduledDate: Date;
    scheduledTime: string;
    status?: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED" | undefined;
    type?: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW" | undefined;
    description?: string | undefined;
    courtLocation?: string | undefined;
    isConfidential?: boolean | undefined;
    notes?: string | undefined;
    duration?: number | undefined;
    judgeName?: string | undefined;
    courtroom?: string | undefined;
    agenda?: string | undefined;
    attendees?: string[] | undefined;
    documents?: string[] | undefined;
    outcome?: string | undefined;
    nextHearingDate?: Date | undefined;
}>;
export declare const UpdateHearingSchema: z.ZodObject<{
    status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["SCHEDULED", "IN_PROGRESS", "COMPLETED", "CANCELLED", "POSTPONED"]>>>;
    type: z.ZodOptional<z.ZodDefault<z.ZodEnum<["FIRST_HEARING", "ARGUMENTS", "EVIDENCE", "JUDGMENT", "EXECUTION", "MEDIATION", "ARBITRATION", "APPEAL", "REVIEW", "OTHER"]>>>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    caseId: z.ZodOptional<z.ZodString>;
    courtName: z.ZodOptional<z.ZodString>;
    courtLocation: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    isConfidential: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    notes: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    hearingNumber: z.ZodOptional<z.ZodString>;
    scheduledDate: z.ZodOptional<z.ZodDate>;
    scheduledTime: z.ZodOptional<z.ZodString>;
    duration: z.ZodOptional<z.ZodDefault<z.ZodNumber>>;
    judgeName: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    courtroom: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    agenda: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    attendees: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    documents: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    outcome: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    nextHearingDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
}, "strip", z.ZodTypeAny, {
    status?: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED" | undefined;
    type?: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW" | undefined;
    description?: string | undefined;
    caseId?: string | undefined;
    courtName?: string | undefined;
    courtLocation?: string | undefined;
    isConfidential?: boolean | undefined;
    notes?: string | undefined;
    hearingNumber?: string | undefined;
    scheduledDate?: Date | undefined;
    scheduledTime?: string | undefined;
    duration?: number | undefined;
    judgeName?: string | undefined;
    courtroom?: string | undefined;
    agenda?: string | undefined;
    attendees?: string[] | undefined;
    documents?: string[] | undefined;
    outcome?: string | undefined;
    nextHearingDate?: Date | undefined;
}, {
    status?: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED" | undefined;
    type?: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW" | undefined;
    description?: string | undefined;
    caseId?: string | undefined;
    courtName?: string | undefined;
    courtLocation?: string | undefined;
    isConfidential?: boolean | undefined;
    notes?: string | undefined;
    hearingNumber?: string | undefined;
    scheduledDate?: Date | undefined;
    scheduledTime?: string | undefined;
    duration?: number | undefined;
    judgeName?: string | undefined;
    courtroom?: string | undefined;
    agenda?: string | undefined;
    attendees?: string[] | undefined;
    documents?: string[] | undefined;
    outcome?: string | undefined;
    nextHearingDate?: Date | undefined;
}>;
export declare const HearingSearchSchema: z.ZodObject<{
    query: z.ZodOptional<z.ZodString>;
    caseId: z.ZodOptional<z.ZodString>;
    type: z.ZodOptional<z.ZodEnum<["FIRST_HEARING", "ARGUMENTS", "EVIDENCE", "JUDGMENT", "EXECUTION", "MEDIATION", "ARBITRATION", "APPEAL", "REVIEW", "OTHER"]>>;
    status: z.ZodOptional<z.ZodEnum<["SCHEDULED", "IN_PROGRESS", "COMPLETED", "CANCELLED", "POSTPONED"]>>;
    courtName: z.ZodOptional<z.ZodString>;
    judgeName: z.ZodOptional<z.ZodString>;
    scheduledDateFrom: z.ZodOptional<z.ZodDate>;
    scheduledDateTo: z.ZodOptional<z.ZodDate>;
    attendeeId: z.ZodOptional<z.ZodString>;
    isConfidential: z.ZodOptional<z.ZodBoolean>;
    limit: z.ZodDefault<z.ZodNumber>;
    offset: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    limit: number;
    offset: number;
    query?: string | undefined;
    status?: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED" | undefined;
    type?: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW" | undefined;
    caseId?: string | undefined;
    courtName?: string | undefined;
    isConfidential?: boolean | undefined;
    judgeName?: string | undefined;
    scheduledDateFrom?: Date | undefined;
    scheduledDateTo?: Date | undefined;
    attendeeId?: string | undefined;
}, {
    query?: string | undefined;
    status?: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED" | undefined;
    type?: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW" | undefined;
    caseId?: string | undefined;
    courtName?: string | undefined;
    isConfidential?: boolean | undefined;
    limit?: number | undefined;
    offset?: number | undefined;
    judgeName?: string | undefined;
    scheduledDateFrom?: Date | undefined;
    scheduledDateTo?: Date | undefined;
    attendeeId?: string | undefined;
}>;
export declare const HearingListSchema: z.ZodObject<{
    id: z.ZodString;
    caseId: z.ZodString;
    hearingNumber: z.ZodString;
    type: z.ZodEnum<["FIRST_HEARING", "ARGUMENTS", "EVIDENCE", "JUDGMENT", "EXECUTION", "MEDIATION", "ARBITRATION", "APPEAL", "REVIEW", "OTHER"]>;
    status: z.ZodEnum<["SCHEDULED", "IN_PROGRESS", "COMPLETED", "CANCELLED", "POSTPONED"]>;
    scheduledDate: z.ZodDate;
    scheduledTime: z.ZodString;
    courtName: z.ZodString;
    judgeName: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED";
    type: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW";
    createdAt: Date;
    caseId: string;
    courtName: string;
    hearingNumber: string;
    scheduledDate: Date;
    scheduledTime: string;
    judgeName?: string | undefined;
}, {
    id: string;
    status: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED";
    type: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW";
    createdAt: Date;
    caseId: string;
    courtName: string;
    hearingNumber: string;
    scheduledDate: Date;
    scheduledTime: string;
    judgeName?: string | undefined;
}>;
export declare const HearingWithCaseSchema: z.ZodObject<{
    id: z.ZodString;
    caseId: z.ZodString;
    hearingNumber: z.ZodString;
    type: z.ZodDefault<z.ZodEnum<["FIRST_HEARING", "ARGUMENTS", "EVIDENCE", "JUDGMENT", "EXECUTION", "MEDIATION", "ARBITRATION", "APPEAL", "REVIEW", "OTHER"]>>;
    status: z.ZodDefault<z.ZodEnum<["SCHEDULED", "IN_PROGRESS", "COMPLETED", "CANCELLED", "POSTPONED"]>>;
    scheduledDate: z.ZodDate;
    scheduledTime: z.ZodString;
    duration: z.ZodDefault<z.ZodNumber>;
    courtName: z.ZodString;
    courtLocation: z.ZodOptional<z.ZodString>;
    judgeName: z.ZodOptional<z.ZodString>;
    courtroom: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    agenda: z.ZodOptional<z.ZodString>;
    attendees: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    documents: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    outcome: z.ZodOptional<z.ZodString>;
    nextHearingDate: z.ZodOptional<z.ZodDate>;
    notes: z.ZodOptional<z.ZodString>;
    isConfidential: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
} & {
    case: z.ZodObject<{
        id: z.ZodString;
        caseNumber: z.ZodString;
        title: z.ZodString;
        status: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        status: string;
        caseNumber: string;
        title: string;
    }, {
        id: string;
        status: string;
        caseNumber: string;
        title: string;
    }>;
}, "strip", z.ZodTypeAny, {
    case: {
        id: string;
        status: string;
        caseNumber: string;
        title: string;
    };
    id: string;
    status: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED";
    type: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW";
    createdAt: Date;
    updatedAt: Date;
    caseId: string;
    courtName: string;
    isConfidential: boolean;
    hearingNumber: string;
    scheduledDate: Date;
    scheduledTime: string;
    duration: number;
    attendees: string[];
    documents: string[];
    description?: string | undefined;
    courtLocation?: string | undefined;
    notes?: string | undefined;
    judgeName?: string | undefined;
    courtroom?: string | undefined;
    agenda?: string | undefined;
    outcome?: string | undefined;
    nextHearingDate?: Date | undefined;
}, {
    case: {
        id: string;
        status: string;
        caseNumber: string;
        title: string;
    };
    id: string;
    createdAt: Date;
    updatedAt: Date;
    caseId: string;
    courtName: string;
    hearingNumber: string;
    scheduledDate: Date;
    scheduledTime: string;
    status?: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED" | undefined;
    type?: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW" | undefined;
    description?: string | undefined;
    courtLocation?: string | undefined;
    isConfidential?: boolean | undefined;
    notes?: string | undefined;
    duration?: number | undefined;
    judgeName?: string | undefined;
    courtroom?: string | undefined;
    agenda?: string | undefined;
    attendees?: string[] | undefined;
    documents?: string[] | undefined;
    outcome?: string | undefined;
    nextHearingDate?: Date | undefined;
}>;
export declare const HearingWithAttendeesSchema: z.ZodObject<{
    id: z.ZodString;
    caseId: z.ZodString;
    hearingNumber: z.ZodString;
    type: z.ZodDefault<z.ZodEnum<["FIRST_HEARING", "ARGUMENTS", "EVIDENCE", "JUDGMENT", "EXECUTION", "MEDIATION", "ARBITRATION", "APPEAL", "REVIEW", "OTHER"]>>;
    status: z.ZodDefault<z.ZodEnum<["SCHEDULED", "IN_PROGRESS", "COMPLETED", "CANCELLED", "POSTPONED"]>>;
    scheduledDate: z.ZodDate;
    scheduledTime: z.ZodString;
    duration: z.ZodDefault<z.ZodNumber>;
    courtName: z.ZodString;
    courtLocation: z.ZodOptional<z.ZodString>;
    judgeName: z.ZodOptional<z.ZodString>;
    courtroom: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    agenda: z.ZodOptional<z.ZodString>;
    attendees: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    documents: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    outcome: z.ZodOptional<z.ZodString>;
    nextHearingDate: z.ZodOptional<z.ZodDate>;
    notes: z.ZodOptional<z.ZodString>;
    isConfidential: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
} & {
    attendeeDetails: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        firstName: z.ZodString;
        lastName: z.ZodString;
        email: z.ZodString;
        role: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
        role: string;
    }, {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
        role: string;
    }>, "many">;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED";
    type: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW";
    createdAt: Date;
    updatedAt: Date;
    caseId: string;
    courtName: string;
    isConfidential: boolean;
    hearingNumber: string;
    scheduledDate: Date;
    scheduledTime: string;
    duration: number;
    attendees: string[];
    documents: string[];
    attendeeDetails: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
        role: string;
    }[];
    description?: string | undefined;
    courtLocation?: string | undefined;
    notes?: string | undefined;
    judgeName?: string | undefined;
    courtroom?: string | undefined;
    agenda?: string | undefined;
    outcome?: string | undefined;
    nextHearingDate?: Date | undefined;
}, {
    id: string;
    createdAt: Date;
    updatedAt: Date;
    caseId: string;
    courtName: string;
    hearingNumber: string;
    scheduledDate: Date;
    scheduledTime: string;
    attendeeDetails: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
        role: string;
    }[];
    status?: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED" | undefined;
    type?: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW" | undefined;
    description?: string | undefined;
    courtLocation?: string | undefined;
    isConfidential?: boolean | undefined;
    notes?: string | undefined;
    duration?: number | undefined;
    judgeName?: string | undefined;
    courtroom?: string | undefined;
    agenda?: string | undefined;
    attendees?: string[] | undefined;
    documents?: string[] | undefined;
    outcome?: string | undefined;
    nextHearingDate?: Date | undefined;
}>;
export declare const HearingCalendarSchema: z.ZodObject<{
    id: z.ZodString;
    caseId: z.ZodString;
    hearingNumber: z.ZodString;
    type: z.ZodEnum<["FIRST_HEARING", "ARGUMENTS", "EVIDENCE", "JUDGMENT", "EXECUTION", "MEDIATION", "ARBITRATION", "APPEAL", "REVIEW", "OTHER"]>;
    status: z.ZodEnum<["SCHEDULED", "IN_PROGRESS", "COMPLETED", "CANCELLED", "POSTPONED"]>;
    scheduledDate: z.ZodDate;
    scheduledTime: z.ZodString;
    duration: z.ZodNumber;
    courtName: z.ZodString;
    courtroom: z.ZodOptional<z.ZodString>;
    caseNumber: z.ZodString;
    caseTitle: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED";
    type: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW";
    caseNumber: string;
    caseId: string;
    courtName: string;
    hearingNumber: string;
    scheduledDate: Date;
    scheduledTime: string;
    duration: number;
    caseTitle: string;
    courtroom?: string | undefined;
}, {
    id: string;
    status: "IN_PROGRESS" | "SCHEDULED" | "COMPLETED" | "CANCELLED" | "POSTPONED";
    type: "OTHER" | "FIRST_HEARING" | "ARGUMENTS" | "EVIDENCE" | "JUDGMENT" | "EXECUTION" | "MEDIATION" | "ARBITRATION" | "APPEAL" | "REVIEW";
    caseNumber: string;
    caseId: string;
    courtName: string;
    hearingNumber: string;
    scheduledDate: Date;
    scheduledTime: string;
    duration: number;
    caseTitle: string;
    courtroom?: string | undefined;
}>;
export declare const HearingStatisticsSchema: z.ZodObject<{
    total: z.ZodNumber;
    scheduled: z.ZodNumber;
    completed: z.ZodNumber;
    cancelled: z.ZodNumber;
    postponed: z.ZodNumber;
    upcoming: z.ZodNumber;
    overdue: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    total: number;
    scheduled: number;
    completed: number;
    cancelled: number;
    postponed: number;
    upcoming: number;
    overdue: number;
}, {
    total: number;
    scheduled: number;
    completed: number;
    cancelled: number;
    postponed: number;
    upcoming: number;
    overdue: number;
}>;
export type Hearing = z.infer<typeof HearingSchema>;
export type CreateHearing = z.infer<typeof CreateHearingSchema>;
export type UpdateHearing = z.infer<typeof UpdateHearingSchema>;
export type HearingSearch = z.infer<typeof HearingSearchSchema>;
export type HearingList = z.infer<typeof HearingListSchema>;
export type HearingWithCase = z.infer<typeof HearingWithCaseSchema>;
export type HearingWithAttendees = z.infer<typeof HearingWithAttendeesSchema>;
export type HearingCalendar = z.infer<typeof HearingCalendarSchema>;
export type HearingStatistics = z.infer<typeof HearingStatisticsSchema>;
//# sourceMappingURL=hearing.d.ts.map