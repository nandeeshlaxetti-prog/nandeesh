import { z } from 'zod';
export declare const EmployeeSchema: z.ZodObject<{
    id: z.ZodString;
    employeeId: z.ZodString;
    userId: z.ZodString;
    department: z.ZodOptional<z.ZodString>;
    designation: z.ZodOptional<z.ZodString>;
    reportingManager: z.ZodOptional<z.ZodString>;
    employmentType: z.ZodDefault<z.ZodEnum<["FULL_TIME", "PART_TIME", "CONTRACT", "INTERN", "CONSULTANT"]>>;
    workLocation: z.ZodOptional<z.ZodString>;
    workSchedule: z.ZodOptional<z.ZodString>;
    skills: z.ZodDefault<z.ZodString>;
    certifications: z.ZodDefault<z.ZodString>;
    experience: z.ZodOptional<z.ZodNumber>;
    salary: z.ZodOptional<z.ZodNumber>;
    currency: z.ZodDefault<z.ZodString>;
    joiningDate: z.ZodOptional<z.ZodDate>;
    probationEndDate: z.ZodOptional<z.ZodDate>;
    confirmationDate: z.ZodOptional<z.ZodDate>;
    lastPromotionDate: z.ZodOptional<z.ZodDate>;
    nextReviewDate: z.ZodOptional<z.ZodDate>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: string;
    isActive: boolean;
    createdAt: Date;
    updatedAt: Date;
    userId: string;
    currency: string;
    employeeId: string;
    employmentType: "FULL_TIME" | "PART_TIME" | "CONTRACT" | "INTERN" | "CONSULTANT";
    skills: string;
    certifications: string;
    joiningDate?: Date | undefined;
    department?: string | undefined;
    designation?: string | undefined;
    reportingManager?: string | undefined;
    workLocation?: string | undefined;
    workSchedule?: string | undefined;
    experience?: number | undefined;
    salary?: number | undefined;
    probationEndDate?: Date | undefined;
    confirmationDate?: Date | undefined;
    lastPromotionDate?: Date | undefined;
    nextReviewDate?: Date | undefined;
}, {
    id: string;
    createdAt: Date;
    updatedAt: Date;
    userId: string;
    employeeId: string;
    isActive?: boolean | undefined;
    joiningDate?: Date | undefined;
    department?: string | undefined;
    currency?: string | undefined;
    designation?: string | undefined;
    reportingManager?: string | undefined;
    employmentType?: "FULL_TIME" | "PART_TIME" | "CONTRACT" | "INTERN" | "CONSULTANT" | undefined;
    workLocation?: string | undefined;
    workSchedule?: string | undefined;
    skills?: string | undefined;
    certifications?: string | undefined;
    experience?: number | undefined;
    salary?: number | undefined;
    probationEndDate?: Date | undefined;
    confirmationDate?: Date | undefined;
    lastPromotionDate?: Date | undefined;
    nextReviewDate?: Date | undefined;
}>;
export declare const CreateEmployeeSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    employeeId: z.ZodString;
    userId: z.ZodString;
    department: z.ZodOptional<z.ZodString>;
    designation: z.ZodOptional<z.ZodString>;
    reportingManager: z.ZodOptional<z.ZodString>;
    employmentType: z.ZodDefault<z.ZodEnum<["FULL_TIME", "PART_TIME", "CONTRACT", "INTERN", "CONSULTANT"]>>;
    workLocation: z.ZodOptional<z.ZodString>;
    workSchedule: z.ZodOptional<z.ZodString>;
    skills: z.ZodDefault<z.ZodString>;
    certifications: z.ZodDefault<z.ZodString>;
    experience: z.ZodOptional<z.ZodNumber>;
    salary: z.ZodOptional<z.ZodNumber>;
    currency: z.ZodDefault<z.ZodString>;
    joiningDate: z.ZodOptional<z.ZodDate>;
    probationEndDate: z.ZodOptional<z.ZodDate>;
    confirmationDate: z.ZodOptional<z.ZodDate>;
    lastPromotionDate: z.ZodOptional<z.ZodDate>;
    nextReviewDate: z.ZodOptional<z.ZodDate>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    isActive: boolean;
    userId: string;
    currency: string;
    employeeId: string;
    employmentType: "FULL_TIME" | "PART_TIME" | "CONTRACT" | "INTERN" | "CONSULTANT";
    skills: string;
    certifications: string;
    joiningDate?: Date | undefined;
    department?: string | undefined;
    designation?: string | undefined;
    reportingManager?: string | undefined;
    workLocation?: string | undefined;
    workSchedule?: string | undefined;
    experience?: number | undefined;
    salary?: number | undefined;
    probationEndDate?: Date | undefined;
    confirmationDate?: Date | undefined;
    lastPromotionDate?: Date | undefined;
    nextReviewDate?: Date | undefined;
}, {
    userId: string;
    employeeId: string;
    isActive?: boolean | undefined;
    joiningDate?: Date | undefined;
    department?: string | undefined;
    currency?: string | undefined;
    designation?: string | undefined;
    reportingManager?: string | undefined;
    employmentType?: "FULL_TIME" | "PART_TIME" | "CONTRACT" | "INTERN" | "CONSULTANT" | undefined;
    workLocation?: string | undefined;
    workSchedule?: string | undefined;
    skills?: string | undefined;
    certifications?: string | undefined;
    experience?: number | undefined;
    salary?: number | undefined;
    probationEndDate?: Date | undefined;
    confirmationDate?: Date | undefined;
    lastPromotionDate?: Date | undefined;
    nextReviewDate?: Date | undefined;
}>;
export declare const UpdateEmployeeSchema: z.ZodObject<{
    isActive: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    joiningDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    department: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    userId: z.ZodOptional<z.ZodString>;
    currency: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    employeeId: z.ZodOptional<z.ZodString>;
    designation: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    reportingManager: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    employmentType: z.ZodOptional<z.ZodDefault<z.ZodEnum<["FULL_TIME", "PART_TIME", "CONTRACT", "INTERN", "CONSULTANT"]>>>;
    workLocation: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    workSchedule: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    skills: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    certifications: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    experience: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    salary: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    probationEndDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    confirmationDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    lastPromotionDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    nextReviewDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
}, "strip", z.ZodTypeAny, {
    isActive?: boolean | undefined;
    joiningDate?: Date | undefined;
    department?: string | undefined;
    userId?: string | undefined;
    currency?: string | undefined;
    employeeId?: string | undefined;
    designation?: string | undefined;
    reportingManager?: string | undefined;
    employmentType?: "FULL_TIME" | "PART_TIME" | "CONTRACT" | "INTERN" | "CONSULTANT" | undefined;
    workLocation?: string | undefined;
    workSchedule?: string | undefined;
    skills?: string | undefined;
    certifications?: string | undefined;
    experience?: number | undefined;
    salary?: number | undefined;
    probationEndDate?: Date | undefined;
    confirmationDate?: Date | undefined;
    lastPromotionDate?: Date | undefined;
    nextReviewDate?: Date | undefined;
}, {
    isActive?: boolean | undefined;
    joiningDate?: Date | undefined;
    department?: string | undefined;
    userId?: string | undefined;
    currency?: string | undefined;
    employeeId?: string | undefined;
    designation?: string | undefined;
    reportingManager?: string | undefined;
    employmentType?: "FULL_TIME" | "PART_TIME" | "CONTRACT" | "INTERN" | "CONSULTANT" | undefined;
    workLocation?: string | undefined;
    workSchedule?: string | undefined;
    skills?: string | undefined;
    certifications?: string | undefined;
    experience?: number | undefined;
    salary?: number | undefined;
    probationEndDate?: Date | undefined;
    confirmationDate?: Date | undefined;
    lastPromotionDate?: Date | undefined;
    nextReviewDate?: Date | undefined;
}>;
export type Employee = z.infer<typeof EmployeeSchema>;
export type CreateEmployee = z.infer<typeof CreateEmployeeSchema>;
export type UpdateEmployee = z.infer<typeof UpdateEmployeeSchema>;
export declare const ProjectSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    code: z.ZodString;
    status: z.ZodDefault<z.ZodEnum<["PLANNING", "ACTIVE", "ON_HOLD", "COMPLETED", "CANCELLED"]>>;
    priority: z.ZodDefault<z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>>;
    type: z.ZodDefault<z.ZodEnum<["CLIENT_PROJECT", "INTERNAL_PROJECT", "RESEARCH_PROJECT", "TRAINING_PROJECT", "OTHER"]>>;
    clientId: z.ZodOptional<z.ZodString>;
    teamId: z.ZodOptional<z.ZodString>;
    managerId: z.ZodOptional<z.ZodString>;
    startDate: z.ZodOptional<z.ZodDate>;
    endDate: z.ZodOptional<z.ZodDate>;
    estimatedHours: z.ZodOptional<z.ZodNumber>;
    actualHours: z.ZodOptional<z.ZodNumber>;
    budget: z.ZodOptional<z.ZodNumber>;
    currency: z.ZodDefault<z.ZodString>;
    tags: z.ZodDefault<z.ZodString>;
    milestones: z.ZodDefault<z.ZodString>;
    deliverables: z.ZodDefault<z.ZodString>;
    risks: z.ZodDefault<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "ACTIVE" | "COMPLETED" | "CANCELLED" | "ON_HOLD" | "PLANNING";
    code: string;
    type: "OTHER" | "CLIENT_PROJECT" | "INTERNAL_PROJECT" | "RESEARCH_PROJECT" | "TRAINING_PROJECT";
    isActive: boolean;
    createdAt: Date;
    updatedAt: Date;
    priority: "LOW" | "MEDIUM" | "HIGH" | "URGENT";
    name: string;
    currency: string;
    tags: string;
    milestones: string;
    deliverables: string;
    risks: string;
    description?: string | undefined;
    clientId?: string | undefined;
    teamId?: string | undefined;
    notes?: string | undefined;
    endDate?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    startDate?: Date | undefined;
    managerId?: string | undefined;
    budget?: number | undefined;
}, {
    id: string;
    code: string;
    createdAt: Date;
    updatedAt: Date;
    name: string;
    status?: "ACTIVE" | "COMPLETED" | "CANCELLED" | "ON_HOLD" | "PLANNING" | undefined;
    type?: "OTHER" | "CLIENT_PROJECT" | "INTERNAL_PROJECT" | "RESEARCH_PROJECT" | "TRAINING_PROJECT" | undefined;
    isActive?: boolean | undefined;
    description?: string | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    clientId?: string | undefined;
    teamId?: string | undefined;
    currency?: string | undefined;
    tags?: string | undefined;
    notes?: string | undefined;
    endDate?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    startDate?: Date | undefined;
    managerId?: string | undefined;
    budget?: number | undefined;
    milestones?: string | undefined;
    deliverables?: string | undefined;
    risks?: string | undefined;
}>;
export declare const CreateProjectSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    code: z.ZodString;
    status: z.ZodDefault<z.ZodEnum<["PLANNING", "ACTIVE", "ON_HOLD", "COMPLETED", "CANCELLED"]>>;
    priority: z.ZodDefault<z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>>;
    type: z.ZodDefault<z.ZodEnum<["CLIENT_PROJECT", "INTERNAL_PROJECT", "RESEARCH_PROJECT", "TRAINING_PROJECT", "OTHER"]>>;
    clientId: z.ZodOptional<z.ZodString>;
    teamId: z.ZodOptional<z.ZodString>;
    managerId: z.ZodOptional<z.ZodString>;
    startDate: z.ZodOptional<z.ZodDate>;
    endDate: z.ZodOptional<z.ZodDate>;
    estimatedHours: z.ZodOptional<z.ZodNumber>;
    actualHours: z.ZodOptional<z.ZodNumber>;
    budget: z.ZodOptional<z.ZodNumber>;
    currency: z.ZodDefault<z.ZodString>;
    tags: z.ZodDefault<z.ZodString>;
    milestones: z.ZodDefault<z.ZodString>;
    deliverables: z.ZodDefault<z.ZodString>;
    risks: z.ZodDefault<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    status: "ACTIVE" | "COMPLETED" | "CANCELLED" | "ON_HOLD" | "PLANNING";
    code: string;
    type: "OTHER" | "CLIENT_PROJECT" | "INTERNAL_PROJECT" | "RESEARCH_PROJECT" | "TRAINING_PROJECT";
    isActive: boolean;
    priority: "LOW" | "MEDIUM" | "HIGH" | "URGENT";
    name: string;
    currency: string;
    tags: string;
    milestones: string;
    deliverables: string;
    risks: string;
    description?: string | undefined;
    clientId?: string | undefined;
    teamId?: string | undefined;
    notes?: string | undefined;
    endDate?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    startDate?: Date | undefined;
    managerId?: string | undefined;
    budget?: number | undefined;
}, {
    code: string;
    name: string;
    status?: "ACTIVE" | "COMPLETED" | "CANCELLED" | "ON_HOLD" | "PLANNING" | undefined;
    type?: "OTHER" | "CLIENT_PROJECT" | "INTERNAL_PROJECT" | "RESEARCH_PROJECT" | "TRAINING_PROJECT" | undefined;
    isActive?: boolean | undefined;
    description?: string | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    clientId?: string | undefined;
    teamId?: string | undefined;
    currency?: string | undefined;
    tags?: string | undefined;
    notes?: string | undefined;
    endDate?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    startDate?: Date | undefined;
    managerId?: string | undefined;
    budget?: number | undefined;
    milestones?: string | undefined;
    deliverables?: string | undefined;
    risks?: string | undefined;
}>;
export declare const UpdateProjectSchema: z.ZodObject<{
    status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["PLANNING", "ACTIVE", "ON_HOLD", "COMPLETED", "CANCELLED"]>>>;
    code: z.ZodOptional<z.ZodString>;
    type: z.ZodOptional<z.ZodDefault<z.ZodEnum<["CLIENT_PROJECT", "INTERNAL_PROJECT", "RESEARCH_PROJECT", "TRAINING_PROJECT", "OTHER"]>>>;
    isActive: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    priority: z.ZodOptional<z.ZodDefault<z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>>>;
    clientId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    name: z.ZodOptional<z.ZodString>;
    teamId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    currency: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    tags: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    notes: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    endDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    estimatedHours: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    actualHours: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    startDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    managerId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    budget: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    milestones: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    deliverables: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    risks: z.ZodOptional<z.ZodDefault<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    status?: "ACTIVE" | "COMPLETED" | "CANCELLED" | "ON_HOLD" | "PLANNING" | undefined;
    code?: string | undefined;
    type?: "OTHER" | "CLIENT_PROJECT" | "INTERNAL_PROJECT" | "RESEARCH_PROJECT" | "TRAINING_PROJECT" | undefined;
    isActive?: boolean | undefined;
    description?: string | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    clientId?: string | undefined;
    name?: string | undefined;
    teamId?: string | undefined;
    currency?: string | undefined;
    tags?: string | undefined;
    notes?: string | undefined;
    endDate?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    startDate?: Date | undefined;
    managerId?: string | undefined;
    budget?: number | undefined;
    milestones?: string | undefined;
    deliverables?: string | undefined;
    risks?: string | undefined;
}, {
    status?: "ACTIVE" | "COMPLETED" | "CANCELLED" | "ON_HOLD" | "PLANNING" | undefined;
    code?: string | undefined;
    type?: "OTHER" | "CLIENT_PROJECT" | "INTERNAL_PROJECT" | "RESEARCH_PROJECT" | "TRAINING_PROJECT" | undefined;
    isActive?: boolean | undefined;
    description?: string | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    clientId?: string | undefined;
    name?: string | undefined;
    teamId?: string | undefined;
    currency?: string | undefined;
    tags?: string | undefined;
    notes?: string | undefined;
    endDate?: Date | undefined;
    estimatedHours?: number | undefined;
    actualHours?: number | undefined;
    startDate?: Date | undefined;
    managerId?: string | undefined;
    budget?: number | undefined;
    milestones?: string | undefined;
    deliverables?: string | undefined;
    risks?: string | undefined;
}>;
export type Project = z.infer<typeof ProjectSchema>;
export type CreateProject = z.infer<typeof CreateProjectSchema>;
export type UpdateProject = z.infer<typeof UpdateProjectSchema>;
export declare const SLAConditionsSchema: z.ZodObject<{
    entityType: z.ZodString;
    entitySubType: z.ZodOptional<z.ZodString>;
    priority: z.ZodOptional<z.ZodString>;
    teamId: z.ZodOptional<z.ZodString>;
    customConditions: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
}, "strip", z.ZodTypeAny, {
    entityType: string;
    priority?: string | undefined;
    teamId?: string | undefined;
    entitySubType?: string | undefined;
    customConditions?: Record<string, any> | undefined;
}, {
    entityType: string;
    priority?: string | undefined;
    teamId?: string | undefined;
    entitySubType?: string | undefined;
    customConditions?: Record<string, any> | undefined;
}>;
export declare const SLAMetricsSchema: z.ZodObject<{
    metricType: z.ZodEnum<["RESPONSE_TIME", "RESOLUTION_TIME", "UPTIME", "CUSTOM"]>;
    threshold: z.ZodNumber;
    unit: z.ZodEnum<["HOURS", "DAYS", "PERCENTAGE", "COUNT"]>;
    calculationMethod: z.ZodEnum<["SUM", "AVERAGE", "MAX", "MIN", "COUNT"]>;
}, "strip", z.ZodTypeAny, {
    metricType: "RESPONSE_TIME" | "RESOLUTION_TIME" | "UPTIME" | "CUSTOM";
    threshold: number;
    unit: "HOURS" | "DAYS" | "PERCENTAGE" | "COUNT";
    calculationMethod: "COUNT" | "SUM" | "AVERAGE" | "MAX" | "MIN";
}, {
    metricType: "RESPONSE_TIME" | "RESOLUTION_TIME" | "UPTIME" | "CUSTOM";
    threshold: number;
    unit: "HOURS" | "DAYS" | "PERCENTAGE" | "COUNT";
    calculationMethod: "COUNT" | "SUM" | "AVERAGE" | "MAX" | "MIN";
}>;
export declare const SLAEscalationRuleSchema: z.ZodObject<{
    level: z.ZodNumber;
    threshold: z.ZodNumber;
    action: z.ZodEnum<["NOTIFY", "ASSIGN", "ESCALATE", "AUTO_RESOLVE"]>;
    recipients: z.ZodArray<z.ZodString, "many">;
    message: z.ZodString;
}, "strip", z.ZodTypeAny, {
    message: string;
    action: "ASSIGN" | "NOTIFY" | "ESCALATE" | "AUTO_RESOLVE";
    threshold: number;
    level: number;
    recipients: string[];
}, {
    message: string;
    action: "ASSIGN" | "NOTIFY" | "ESCALATE" | "AUTO_RESOLVE";
    threshold: number;
    level: number;
    recipients: string[];
}>;
export declare const SLANotificationSettingsSchema: z.ZodObject<{
    enabled: z.ZodBoolean;
    channels: z.ZodArray<z.ZodEnum<["EMAIL", "SMS", "PUSH", "IN_APP"]>, "many">;
    recipients: z.ZodArray<z.ZodString, "many">;
    frequency: z.ZodEnum<["IMMEDIATE", "HOURLY", "DAILY", "WEEKLY"]>;
}, "strip", z.ZodTypeAny, {
    recipients: string[];
    enabled: boolean;
    channels: ("EMAIL" | "SMS" | "PUSH" | "IN_APP")[];
    frequency: "DAILY" | "WEEKLY" | "HOURLY" | "IMMEDIATE";
}, {
    recipients: string[];
    enabled: boolean;
    channels: ("EMAIL" | "SMS" | "PUSH" | "IN_APP")[];
    frequency: "DAILY" | "WEEKLY" | "HOURLY" | "IMMEDIATE";
}>;
export declare const SLARuleSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    entityType: z.ZodString;
    entitySubType: z.ZodOptional<z.ZodString>;
    priority: z.ZodOptional<z.ZodString>;
    teamId: z.ZodOptional<z.ZodString>;
    conditions: z.ZodString;
    metrics: z.ZodString;
    escalationRules: z.ZodString;
    notifications: z.ZodString;
    isActive: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: string;
    isActive: boolean;
    createdAt: Date;
    updatedAt: Date;
    name: string;
    entityType: string;
    conditions: string;
    metrics: string;
    escalationRules: string;
    notifications: string;
    description?: string | undefined;
    priority?: string | undefined;
    teamId?: string | undefined;
    entitySubType?: string | undefined;
}, {
    id: string;
    createdAt: Date;
    updatedAt: Date;
    name: string;
    entityType: string;
    conditions: string;
    metrics: string;
    escalationRules: string;
    notifications: string;
    isActive?: boolean | undefined;
    description?: string | undefined;
    priority?: string | undefined;
    teamId?: string | undefined;
    entitySubType?: string | undefined;
}>;
export declare const CreateSLARuleSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    entityType: z.ZodString;
    entitySubType: z.ZodOptional<z.ZodString>;
    priority: z.ZodOptional<z.ZodString>;
    teamId: z.ZodOptional<z.ZodString>;
    conditions: z.ZodString;
    metrics: z.ZodString;
    escalationRules: z.ZodString;
    notifications: z.ZodString;
    isActive: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    isActive: boolean;
    name: string;
    entityType: string;
    conditions: string;
    metrics: string;
    escalationRules: string;
    notifications: string;
    description?: string | undefined;
    priority?: string | undefined;
    teamId?: string | undefined;
    entitySubType?: string | undefined;
}, {
    name: string;
    entityType: string;
    conditions: string;
    metrics: string;
    escalationRules: string;
    notifications: string;
    isActive?: boolean | undefined;
    description?: string | undefined;
    priority?: string | undefined;
    teamId?: string | undefined;
    entitySubType?: string | undefined;
}>;
export declare const UpdateSLARuleSchema: z.ZodObject<{
    isActive: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    priority: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    name: z.ZodOptional<z.ZodString>;
    teamId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    entityType: z.ZodOptional<z.ZodString>;
    entitySubType: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    conditions: z.ZodOptional<z.ZodString>;
    metrics: z.ZodOptional<z.ZodString>;
    escalationRules: z.ZodOptional<z.ZodString>;
    notifications: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    isActive?: boolean | undefined;
    description?: string | undefined;
    priority?: string | undefined;
    name?: string | undefined;
    teamId?: string | undefined;
    entityType?: string | undefined;
    entitySubType?: string | undefined;
    conditions?: string | undefined;
    metrics?: string | undefined;
    escalationRules?: string | undefined;
    notifications?: string | undefined;
}, {
    isActive?: boolean | undefined;
    description?: string | undefined;
    priority?: string | undefined;
    name?: string | undefined;
    teamId?: string | undefined;
    entityType?: string | undefined;
    entitySubType?: string | undefined;
    conditions?: string | undefined;
    metrics?: string | undefined;
    escalationRules?: string | undefined;
    notifications?: string | undefined;
}>;
export type SLAConditions = z.infer<typeof SLAConditionsSchema>;
export type SLAMetrics = z.infer<typeof SLAMetricsSchema>;
export type SLAEscalationRule = z.infer<typeof SLAEscalationRuleSchema>;
export type SLANotificationSettings = z.infer<typeof SLANotificationSettingsSchema>;
export type SLARule = z.infer<typeof SLARuleSchema>;
export type CreateSLARule = z.infer<typeof CreateSLARuleSchema>;
export type UpdateSLARule = z.infer<typeof UpdateSLARuleSchema>;
export declare const SLAEvaluationSchema: z.ZodObject<{
    id: z.ZodString;
    entityType: z.ZodString;
    entityId: z.ZodString;
    slaRuleId: z.ZodString;
    employeeId: z.ZodOptional<z.ZodString>;
    status: z.ZodDefault<z.ZodEnum<["PENDING", "IN_PROGRESS", "COMPLETED", "BREACHED", "ESCALATED"]>>;
    currentValue: z.ZodOptional<z.ZodNumber>;
    thresholdValue: z.ZodOptional<z.ZodNumber>;
    breachDate: z.ZodOptional<z.ZodDate>;
    escalationDate: z.ZodOptional<z.ZodDate>;
    resolutionDate: z.ZodOptional<z.ZodDate>;
    notes: z.ZodOptional<z.ZodString>;
    metadata: z.ZodDefault<z.ZodString>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "BREACHED" | "ESCALATED";
    createdAt: Date;
    updatedAt: Date;
    entityType: string;
    entityId: string;
    slaRuleId: string;
    metadata: string;
    notes?: string | undefined;
    employeeId?: string | undefined;
    currentValue?: number | undefined;
    thresholdValue?: number | undefined;
    breachDate?: Date | undefined;
    escalationDate?: Date | undefined;
    resolutionDate?: Date | undefined;
}, {
    id: string;
    createdAt: Date;
    updatedAt: Date;
    entityType: string;
    entityId: string;
    slaRuleId: string;
    status?: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "BREACHED" | "ESCALATED" | undefined;
    notes?: string | undefined;
    employeeId?: string | undefined;
    currentValue?: number | undefined;
    thresholdValue?: number | undefined;
    breachDate?: Date | undefined;
    escalationDate?: Date | undefined;
    resolutionDate?: Date | undefined;
    metadata?: string | undefined;
}>;
export declare const CreateSLAEvaluationSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    entityType: z.ZodString;
    entityId: z.ZodString;
    slaRuleId: z.ZodString;
    employeeId: z.ZodOptional<z.ZodString>;
    status: z.ZodDefault<z.ZodEnum<["PENDING", "IN_PROGRESS", "COMPLETED", "BREACHED", "ESCALATED"]>>;
    currentValue: z.ZodOptional<z.ZodNumber>;
    thresholdValue: z.ZodOptional<z.ZodNumber>;
    breachDate: z.ZodOptional<z.ZodDate>;
    escalationDate: z.ZodOptional<z.ZodDate>;
    resolutionDate: z.ZodOptional<z.ZodDate>;
    notes: z.ZodOptional<z.ZodString>;
    metadata: z.ZodDefault<z.ZodString>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    status: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "BREACHED" | "ESCALATED";
    entityType: string;
    entityId: string;
    slaRuleId: string;
    metadata: string;
    notes?: string | undefined;
    employeeId?: string | undefined;
    currentValue?: number | undefined;
    thresholdValue?: number | undefined;
    breachDate?: Date | undefined;
    escalationDate?: Date | undefined;
    resolutionDate?: Date | undefined;
}, {
    entityType: string;
    entityId: string;
    slaRuleId: string;
    status?: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "BREACHED" | "ESCALATED" | undefined;
    notes?: string | undefined;
    employeeId?: string | undefined;
    currentValue?: number | undefined;
    thresholdValue?: number | undefined;
    breachDate?: Date | undefined;
    escalationDate?: Date | undefined;
    resolutionDate?: Date | undefined;
    metadata?: string | undefined;
}>;
export declare const UpdateSLAEvaluationSchema: z.ZodObject<{
    status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["PENDING", "IN_PROGRESS", "COMPLETED", "BREACHED", "ESCALATED"]>>>;
    notes: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    entityType: z.ZodOptional<z.ZodString>;
    entityId: z.ZodOptional<z.ZodString>;
    employeeId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    slaRuleId: z.ZodOptional<z.ZodString>;
    currentValue: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    thresholdValue: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    breachDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    escalationDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    resolutionDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    metadata: z.ZodOptional<z.ZodDefault<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    status?: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "BREACHED" | "ESCALATED" | undefined;
    notes?: string | undefined;
    entityType?: string | undefined;
    entityId?: string | undefined;
    employeeId?: string | undefined;
    slaRuleId?: string | undefined;
    currentValue?: number | undefined;
    thresholdValue?: number | undefined;
    breachDate?: Date | undefined;
    escalationDate?: Date | undefined;
    resolutionDate?: Date | undefined;
    metadata?: string | undefined;
}, {
    status?: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "BREACHED" | "ESCALATED" | undefined;
    notes?: string | undefined;
    entityType?: string | undefined;
    entityId?: string | undefined;
    employeeId?: string | undefined;
    slaRuleId?: string | undefined;
    currentValue?: number | undefined;
    thresholdValue?: number | undefined;
    breachDate?: Date | undefined;
    escalationDate?: Date | undefined;
    resolutionDate?: Date | undefined;
    metadata?: string | undefined;
}>;
export type SLAEvaluation = z.infer<typeof SLAEvaluationSchema>;
export type CreateSLAEvaluation = z.infer<typeof CreateSLAEvaluationSchema>;
export type UpdateSLAEvaluation = z.infer<typeof UpdateSLAEvaluationSchema>;
export declare const SLAEvaluationResultSchema: z.ZodObject<{
    entityId: z.ZodString;
    entityType: z.ZodString;
    slaRuleId: z.ZodString;
    status: z.ZodEnum<["PENDING", "IN_PROGRESS", "COMPLETED", "BREACHED", "ESCALATED"]>;
    currentValue: z.ZodNumber;
    thresholdValue: z.ZodNumber;
    breachDate: z.ZodOptional<z.ZodDate>;
    escalationDate: z.ZodOptional<z.ZodDate>;
    resolutionDate: z.ZodOptional<z.ZodDate>;
    notes: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
}, "strip", z.ZodTypeAny, {
    status: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "BREACHED" | "ESCALATED";
    entityType: string;
    entityId: string;
    slaRuleId: string;
    currentValue: number;
    thresholdValue: number;
    notes?: string | undefined;
    breachDate?: Date | undefined;
    escalationDate?: Date | undefined;
    resolutionDate?: Date | undefined;
    metadata?: Record<string, any> | undefined;
}, {
    status: "PENDING" | "IN_PROGRESS" | "COMPLETED" | "BREACHED" | "ESCALATED";
    entityType: string;
    entityId: string;
    slaRuleId: string;
    currentValue: number;
    thresholdValue: number;
    notes?: string | undefined;
    breachDate?: Date | undefined;
    escalationDate?: Date | undefined;
    resolutionDate?: Date | undefined;
    metadata?: Record<string, any> | undefined;
}>;
export declare const SLAEvaluationContextSchema: z.ZodObject<{
    entityId: z.ZodString;
    entityType: z.ZodString;
    entitySubType: z.ZodOptional<z.ZodString>;
    priority: z.ZodOptional<z.ZodString>;
    teamId: z.ZodOptional<z.ZodString>;
    employeeId: z.ZodOptional<z.ZodString>;
    customData: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
}, "strip", z.ZodTypeAny, {
    entityType: string;
    entityId: string;
    priority?: string | undefined;
    teamId?: string | undefined;
    employeeId?: string | undefined;
    entitySubType?: string | undefined;
    customData?: Record<string, any> | undefined;
}, {
    entityType: string;
    entityId: string;
    priority?: string | undefined;
    teamId?: string | undefined;
    employeeId?: string | undefined;
    entitySubType?: string | undefined;
    customData?: Record<string, any> | undefined;
}>;
export type SLAEvaluationResult = z.infer<typeof SLAEvaluationResultSchema>;
export type SLAEvaluationContext = z.infer<typeof SLAEvaluationContextSchema>;
export declare const EnhancedCaseSchema: z.ZodObject<{
    id: z.ZodString;
    caseNumber: z.ZodString;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    status: z.ZodDefault<z.ZodEnum<["OPEN", "IN_PROGRESS", "CLOSED", "ARCHIVED", "SUSPENDED"]>>;
    priority: z.ZodDefault<z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>>;
    type: z.ZodDefault<z.ZodEnum<["CIVIL", "CRIMINAL", "FAMILY", "CORPORATE", "IP", "LABOR", "TAX", "REAL_ESTATE", "BANKING", "INSURANCE", "OTHER"]>>;
    clientId: z.ZodString;
    assignedLawyerId: z.ZodOptional<z.ZodString>;
    teamId: z.ZodOptional<z.ZodString>;
    projectId: z.ZodOptional<z.ZodString>;
    defaultAssigneeId: z.ZodOptional<z.ZodString>;
    courtName: z.ZodOptional<z.ZodString>;
    courtLocation: z.ZodOptional<z.ZodString>;
    caseValue: z.ZodOptional<z.ZodNumber>;
    currency: z.ZodDefault<z.ZodString>;
    filingDate: z.ZodOptional<z.ZodDate>;
    expectedCompletionDate: z.ZodOptional<z.ZodDate>;
    actualCompletionDate: z.ZodOptional<z.ZodDate>;
    tags: z.ZodDefault<z.ZodString>;
    isConfidential: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "SUSPENDED" | "ARCHIVED" | "OPEN" | "IN_PROGRESS" | "CLOSED";
    type: "CIVIL" | "CRIMINAL" | "FAMILY" | "CORPORATE" | "LABOR" | "TAX" | "REAL_ESTATE" | "BANKING" | "INSURANCE" | "OTHER" | "IP";
    createdAt: Date;
    updatedAt: Date;
    caseNumber: string;
    title: string;
    priority: "LOW" | "MEDIUM" | "HIGH" | "URGENT";
    clientId: string;
    currency: string;
    tags: string;
    isConfidential: boolean;
    description?: string | undefined;
    assignedLawyerId?: string | undefined;
    teamId?: string | undefined;
    courtName?: string | undefined;
    courtLocation?: string | undefined;
    caseValue?: number | undefined;
    filingDate?: Date | undefined;
    expectedCompletionDate?: Date | undefined;
    actualCompletionDate?: Date | undefined;
    projectId?: string | undefined;
    defaultAssigneeId?: string | undefined;
}, {
    id: string;
    createdAt: Date;
    updatedAt: Date;
    caseNumber: string;
    title: string;
    clientId: string;
    status?: "SUSPENDED" | "ARCHIVED" | "OPEN" | "IN_PROGRESS" | "CLOSED" | undefined;
    type?: "CIVIL" | "CRIMINAL" | "FAMILY" | "CORPORATE" | "LABOR" | "TAX" | "REAL_ESTATE" | "BANKING" | "INSURANCE" | "OTHER" | "IP" | undefined;
    description?: string | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    assignedLawyerId?: string | undefined;
    teamId?: string | undefined;
    courtName?: string | undefined;
    courtLocation?: string | undefined;
    caseValue?: number | undefined;
    currency?: string | undefined;
    filingDate?: Date | undefined;
    expectedCompletionDate?: Date | undefined;
    actualCompletionDate?: Date | undefined;
    tags?: string | undefined;
    isConfidential?: boolean | undefined;
    projectId?: string | undefined;
    defaultAssigneeId?: string | undefined;
}>;
export declare const CreateEnhancedCaseSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    caseNumber: z.ZodString;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    status: z.ZodDefault<z.ZodEnum<["OPEN", "IN_PROGRESS", "CLOSED", "ARCHIVED", "SUSPENDED"]>>;
    priority: z.ZodDefault<z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>>;
    type: z.ZodDefault<z.ZodEnum<["CIVIL", "CRIMINAL", "FAMILY", "CORPORATE", "IP", "LABOR", "TAX", "REAL_ESTATE", "BANKING", "INSURANCE", "OTHER"]>>;
    clientId: z.ZodString;
    assignedLawyerId: z.ZodOptional<z.ZodString>;
    teamId: z.ZodOptional<z.ZodString>;
    projectId: z.ZodOptional<z.ZodString>;
    defaultAssigneeId: z.ZodOptional<z.ZodString>;
    courtName: z.ZodOptional<z.ZodString>;
    courtLocation: z.ZodOptional<z.ZodString>;
    caseValue: z.ZodOptional<z.ZodNumber>;
    currency: z.ZodDefault<z.ZodString>;
    filingDate: z.ZodOptional<z.ZodDate>;
    expectedCompletionDate: z.ZodOptional<z.ZodDate>;
    actualCompletionDate: z.ZodOptional<z.ZodDate>;
    tags: z.ZodDefault<z.ZodString>;
    isConfidential: z.ZodDefault<z.ZodBoolean>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "id" | "createdAt" | "updatedAt">, "strip", z.ZodTypeAny, {
    status: "SUSPENDED" | "ARCHIVED" | "OPEN" | "IN_PROGRESS" | "CLOSED";
    type: "CIVIL" | "CRIMINAL" | "FAMILY" | "CORPORATE" | "LABOR" | "TAX" | "REAL_ESTATE" | "BANKING" | "INSURANCE" | "OTHER" | "IP";
    caseNumber: string;
    title: string;
    priority: "LOW" | "MEDIUM" | "HIGH" | "URGENT";
    clientId: string;
    currency: string;
    tags: string;
    isConfidential: boolean;
    description?: string | undefined;
    assignedLawyerId?: string | undefined;
    teamId?: string | undefined;
    courtName?: string | undefined;
    courtLocation?: string | undefined;
    caseValue?: number | undefined;
    filingDate?: Date | undefined;
    expectedCompletionDate?: Date | undefined;
    actualCompletionDate?: Date | undefined;
    projectId?: string | undefined;
    defaultAssigneeId?: string | undefined;
}, {
    caseNumber: string;
    title: string;
    clientId: string;
    status?: "SUSPENDED" | "ARCHIVED" | "OPEN" | "IN_PROGRESS" | "CLOSED" | undefined;
    type?: "CIVIL" | "CRIMINAL" | "FAMILY" | "CORPORATE" | "LABOR" | "TAX" | "REAL_ESTATE" | "BANKING" | "INSURANCE" | "OTHER" | "IP" | undefined;
    description?: string | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    assignedLawyerId?: string | undefined;
    teamId?: string | undefined;
    courtName?: string | undefined;
    courtLocation?: string | undefined;
    caseValue?: number | undefined;
    currency?: string | undefined;
    filingDate?: Date | undefined;
    expectedCompletionDate?: Date | undefined;
    actualCompletionDate?: Date | undefined;
    tags?: string | undefined;
    isConfidential?: boolean | undefined;
    projectId?: string | undefined;
    defaultAssigneeId?: string | undefined;
}>;
export declare const UpdateEnhancedCaseSchema: z.ZodObject<{
    status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["OPEN", "IN_PROGRESS", "CLOSED", "ARCHIVED", "SUSPENDED"]>>>;
    type: z.ZodOptional<z.ZodDefault<z.ZodEnum<["CIVIL", "CRIMINAL", "FAMILY", "CORPORATE", "IP", "LABOR", "TAX", "REAL_ESTATE", "BANKING", "INSURANCE", "OTHER"]>>>;
    caseNumber: z.ZodOptional<z.ZodString>;
    title: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    priority: z.ZodOptional<z.ZodDefault<z.ZodEnum<["LOW", "MEDIUM", "HIGH", "URGENT"]>>>;
    clientId: z.ZodOptional<z.ZodString>;
    assignedLawyerId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    teamId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    courtName: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    courtLocation: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    caseValue: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    currency: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    filingDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    expectedCompletionDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    actualCompletionDate: z.ZodOptional<z.ZodOptional<z.ZodDate>>;
    tags: z.ZodOptional<z.ZodDefault<z.ZodString>>;
    isConfidential: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    projectId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    defaultAssigneeId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    status?: "SUSPENDED" | "ARCHIVED" | "OPEN" | "IN_PROGRESS" | "CLOSED" | undefined;
    type?: "CIVIL" | "CRIMINAL" | "FAMILY" | "CORPORATE" | "LABOR" | "TAX" | "REAL_ESTATE" | "BANKING" | "INSURANCE" | "OTHER" | "IP" | undefined;
    caseNumber?: string | undefined;
    title?: string | undefined;
    description?: string | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    clientId?: string | undefined;
    assignedLawyerId?: string | undefined;
    teamId?: string | undefined;
    courtName?: string | undefined;
    courtLocation?: string | undefined;
    caseValue?: number | undefined;
    currency?: string | undefined;
    filingDate?: Date | undefined;
    expectedCompletionDate?: Date | undefined;
    actualCompletionDate?: Date | undefined;
    tags?: string | undefined;
    isConfidential?: boolean | undefined;
    projectId?: string | undefined;
    defaultAssigneeId?: string | undefined;
}, {
    status?: "SUSPENDED" | "ARCHIVED" | "OPEN" | "IN_PROGRESS" | "CLOSED" | undefined;
    type?: "CIVIL" | "CRIMINAL" | "FAMILY" | "CORPORATE" | "LABOR" | "TAX" | "REAL_ESTATE" | "BANKING" | "INSURANCE" | "OTHER" | "IP" | undefined;
    caseNumber?: string | undefined;
    title?: string | undefined;
    description?: string | undefined;
    priority?: "LOW" | "MEDIUM" | "HIGH" | "URGENT" | undefined;
    clientId?: string | undefined;
    assignedLawyerId?: string | undefined;
    teamId?: string | undefined;
    courtName?: string | undefined;
    courtLocation?: string | undefined;
    caseValue?: number | undefined;
    currency?: string | undefined;
    filingDate?: Date | undefined;
    expectedCompletionDate?: Date | undefined;
    actualCompletionDate?: Date | undefined;
    tags?: string | undefined;
    isConfidential?: boolean | undefined;
    projectId?: string | undefined;
    defaultAssigneeId?: string | undefined;
}>;
export type EnhancedCase = z.infer<typeof EnhancedCaseSchema>;
export type CreateEnhancedCase = z.infer<typeof CreateEnhancedCaseSchema>;
export type UpdateEnhancedCase = z.infer<typeof UpdateEnhancedCaseSchema>;
//# sourceMappingURL=employee.d.ts.map