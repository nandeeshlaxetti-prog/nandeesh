import { z } from 'zod';
export declare const WorklogTypeSchema: z.ZodEnum<["CASE_WORK", "ADMIN_WORK", "RESEARCH", "MEETING", "TRAVEL", "OTHER"]>;
export type WorklogType = z.infer<typeof WorklogTypeSchema>;
export declare const WorklogStatusSchema: z.ZodEnum<["DRAFT", "SUBMITTED", "APPROVED", "REJECTED"]>;
export type WorklogStatus = z.infer<typeof WorklogStatusSchema>;
export declare const WorklogSchema: z.ZodObject<{
    id: z.ZodString;
    userId: z.ZodString;
    caseId: z.ZodOptional<z.ZodString>;
    taskId: z.ZodOptional<z.ZodString>;
    subtaskId: z.ZodOptional<z.ZodString>;
    type: z.ZodDefault<z.ZodEnum<["CASE_WORK", "ADMIN_WORK", "RESEARCH", "MEETING", "TRAVEL", "OTHER"]>>;
    status: z.ZodDefault<z.ZodEnum<["DRAFT", "SUBMITTED", "APPROVED", "REJECTED"]>>;
    date: z.ZodDate;
    startTime: z.ZodString;
    endTime: z.ZodString;
    duration: z.ZodNumber;
    description: z.ZodString;
    activities: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    billableHours: z.ZodOptional<z.ZodNumber>;
    hourlyRate: z.ZodOptional<z.ZodNumber>;
    totalAmount: z.ZodOptional<z.ZodNumber>;
    location: z.ZodOptional<z.ZodString>;
    isBillable: z.ZodDefault<z.ZodBoolean>;
    isOvertime: z.ZodDefault<z.ZodBoolean>;
    attachments: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    notes: z.ZodOptional<z.ZodString>;
    approvedBy: z.ZodOptional<z.ZodString>;
    approvedAt: z.ZodOptional<z.ZodDate>;
    rejectionReason: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED";
    type: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL";
    date: Date;
    createdAt: Date;
    updatedAt: Date;
    description: string;
    userId: string;
    duration: number;
    attachments: string[];
    startTime: string;
    endTime: string;
    activities: string[];
    isBillable: boolean;
    isOvertime: boolean;
    caseId?: string | undefined;
    notes?: string | undefined;
    approvedBy?: string | undefined;
    approvedAt?: Date | undefined;
    taskId?: string | undefined;
    subtaskId?: string | undefined;
    billableHours?: number | undefined;
    hourlyRate?: number | undefined;
    totalAmount?: number | undefined;
    location?: string | undefined;
    rejectionReason?: string | undefined;
}, {
    id: string;
    date: Date;
    createdAt: Date;
    updatedAt: Date;
    description: string;
    userId: string;
    duration: number;
    startTime: string;
    endTime: string;
    status?: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED" | undefined;
    type?: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL" | undefined;
    caseId?: string | undefined;
    notes?: string | undefined;
    approvedBy?: string | undefined;
    approvedAt?: Date | undefined;
    attachments?: string[] | undefined;
    taskId?: string | undefined;
    subtaskId?: string | undefined;
    activities?: string[] | undefined;
    billableHours?: number | undefined;
    hourlyRate?: number | undefined;
    totalAmount?: number | undefined;
    location?: string | undefined;
    isBillable?: boolean | undefined;
    isOvertime?: boolean | undefined;
    rejectionReason?: string | undefined;
}>;
export declare const CreateWorklogSchema: z.ZodObject<Omit<{
    id: z.ZodString;
    userId: z.ZodString;
    caseId: z.ZodOptional<z.ZodString>;
    taskId: z.ZodOptional<z.ZodString>;
    subtaskId: z.ZodOptional<z.ZodString>;
    type: z.ZodDefault<z.ZodEnum<["CASE_WORK", "ADMIN_WORK", "RESEARCH", "MEETING", "TRAVEL", "OTHER"]>>;
    status: z.ZodDefault<z.ZodEnum<["DRAFT", "SUBMITTED", "APPROVED", "REJECTED"]>>;
    date: z.ZodDate;
    startTime: z.ZodString;
    endTime: z.ZodString;
    duration: z.ZodNumber;
    description: z.ZodString;
    activities: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    billableHours: z.ZodOptional<z.ZodNumber>;
    hourlyRate: z.ZodOptional<z.ZodNumber>;
    totalAmount: z.ZodOptional<z.ZodNumber>;
    location: z.ZodOptional<z.ZodString>;
    isBillable: z.ZodDefault<z.ZodBoolean>;
    isOvertime: z.ZodDefault<z.ZodBoolean>;
    attachments: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    notes: z.ZodOptional<z.ZodString>;
    approvedBy: z.ZodOptional<z.ZodString>;
    approvedAt: z.ZodOptional<z.ZodDate>;
    rejectionReason: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "id" | "createdAt" | "updatedAt" | "approvedAt">, "strip", z.ZodTypeAny, {
    status: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED";
    type: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL";
    date: Date;
    description: string;
    userId: string;
    duration: number;
    attachments: string[];
    startTime: string;
    endTime: string;
    activities: string[];
    isBillable: boolean;
    isOvertime: boolean;
    caseId?: string | undefined;
    notes?: string | undefined;
    approvedBy?: string | undefined;
    taskId?: string | undefined;
    subtaskId?: string | undefined;
    billableHours?: number | undefined;
    hourlyRate?: number | undefined;
    totalAmount?: number | undefined;
    location?: string | undefined;
    rejectionReason?: string | undefined;
}, {
    date: Date;
    description: string;
    userId: string;
    duration: number;
    startTime: string;
    endTime: string;
    status?: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED" | undefined;
    type?: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL" | undefined;
    caseId?: string | undefined;
    notes?: string | undefined;
    approvedBy?: string | undefined;
    attachments?: string[] | undefined;
    taskId?: string | undefined;
    subtaskId?: string | undefined;
    activities?: string[] | undefined;
    billableHours?: number | undefined;
    hourlyRate?: number | undefined;
    totalAmount?: number | undefined;
    location?: string | undefined;
    isBillable?: boolean | undefined;
    isOvertime?: boolean | undefined;
    rejectionReason?: string | undefined;
}>;
export declare const UpdateWorklogSchema: z.ZodObject<{
    status: z.ZodOptional<z.ZodDefault<z.ZodEnum<["DRAFT", "SUBMITTED", "APPROVED", "REJECTED"]>>>;
    type: z.ZodOptional<z.ZodDefault<z.ZodEnum<["CASE_WORK", "ADMIN_WORK", "RESEARCH", "MEETING", "TRAVEL", "OTHER"]>>>;
    date: z.ZodOptional<z.ZodDate>;
    description: z.ZodOptional<z.ZodString>;
    caseId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    userId: z.ZodOptional<z.ZodString>;
    notes: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    duration: z.ZodOptional<z.ZodNumber>;
    approvedBy: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    attachments: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    taskId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    subtaskId: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    startTime: z.ZodOptional<z.ZodString>;
    endTime: z.ZodOptional<z.ZodString>;
    activities: z.ZodOptional<z.ZodDefault<z.ZodArray<z.ZodString, "many">>>;
    billableHours: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    hourlyRate: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    totalAmount: z.ZodOptional<z.ZodOptional<z.ZodNumber>>;
    location: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    isBillable: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    isOvertime: z.ZodOptional<z.ZodDefault<z.ZodBoolean>>;
    rejectionReason: z.ZodOptional<z.ZodOptional<z.ZodString>>;
}, "strip", z.ZodTypeAny, {
    status?: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED" | undefined;
    type?: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL" | undefined;
    date?: Date | undefined;
    description?: string | undefined;
    caseId?: string | undefined;
    userId?: string | undefined;
    notes?: string | undefined;
    duration?: number | undefined;
    approvedBy?: string | undefined;
    attachments?: string[] | undefined;
    taskId?: string | undefined;
    subtaskId?: string | undefined;
    startTime?: string | undefined;
    endTime?: string | undefined;
    activities?: string[] | undefined;
    billableHours?: number | undefined;
    hourlyRate?: number | undefined;
    totalAmount?: number | undefined;
    location?: string | undefined;
    isBillable?: boolean | undefined;
    isOvertime?: boolean | undefined;
    rejectionReason?: string | undefined;
}, {
    status?: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED" | undefined;
    type?: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL" | undefined;
    date?: Date | undefined;
    description?: string | undefined;
    caseId?: string | undefined;
    userId?: string | undefined;
    notes?: string | undefined;
    duration?: number | undefined;
    approvedBy?: string | undefined;
    attachments?: string[] | undefined;
    taskId?: string | undefined;
    subtaskId?: string | undefined;
    startTime?: string | undefined;
    endTime?: string | undefined;
    activities?: string[] | undefined;
    billableHours?: number | undefined;
    hourlyRate?: number | undefined;
    totalAmount?: number | undefined;
    location?: string | undefined;
    isBillable?: boolean | undefined;
    isOvertime?: boolean | undefined;
    rejectionReason?: string | undefined;
}>;
export declare const WorklogSearchSchema: z.ZodObject<{
    query: z.ZodOptional<z.ZodString>;
    userId: z.ZodOptional<z.ZodString>;
    caseId: z.ZodOptional<z.ZodString>;
    taskId: z.ZodOptional<z.ZodString>;
    subtaskId: z.ZodOptional<z.ZodString>;
    type: z.ZodOptional<z.ZodEnum<["CASE_WORK", "ADMIN_WORK", "RESEARCH", "MEETING", "TRAVEL", "OTHER"]>>;
    status: z.ZodOptional<z.ZodEnum<["DRAFT", "SUBMITTED", "APPROVED", "REJECTED"]>>;
    dateFrom: z.ZodOptional<z.ZodDate>;
    dateTo: z.ZodOptional<z.ZodDate>;
    isBillable: z.ZodOptional<z.ZodBoolean>;
    isOvertime: z.ZodOptional<z.ZodBoolean>;
    approvedBy: z.ZodOptional<z.ZodString>;
    limit: z.ZodDefault<z.ZodNumber>;
    offset: z.ZodDefault<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    limit: number;
    offset: number;
    query?: string | undefined;
    status?: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED" | undefined;
    type?: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL" | undefined;
    caseId?: string | undefined;
    userId?: string | undefined;
    approvedBy?: string | undefined;
    taskId?: string | undefined;
    subtaskId?: string | undefined;
    isBillable?: boolean | undefined;
    isOvertime?: boolean | undefined;
    dateFrom?: Date | undefined;
    dateTo?: Date | undefined;
}, {
    query?: string | undefined;
    status?: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED" | undefined;
    type?: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL" | undefined;
    caseId?: string | undefined;
    userId?: string | undefined;
    limit?: number | undefined;
    offset?: number | undefined;
    approvedBy?: string | undefined;
    taskId?: string | undefined;
    subtaskId?: string | undefined;
    isBillable?: boolean | undefined;
    isOvertime?: boolean | undefined;
    dateFrom?: Date | undefined;
    dateTo?: Date | undefined;
}>;
export declare const WorklogListSchema: z.ZodObject<{
    id: z.ZodString;
    userId: z.ZodString;
    caseId: z.ZodOptional<z.ZodString>;
    taskId: z.ZodOptional<z.ZodString>;
    type: z.ZodEnum<["CASE_WORK", "ADMIN_WORK", "RESEARCH", "MEETING", "TRAVEL", "OTHER"]>;
    status: z.ZodEnum<["DRAFT", "SUBMITTED", "APPROVED", "REJECTED"]>;
    date: z.ZodDate;
    duration: z.ZodNumber;
    description: z.ZodString;
    billableHours: z.ZodOptional<z.ZodNumber>;
    totalAmount: z.ZodOptional<z.ZodNumber>;
    isBillable: z.ZodBoolean;
    createdAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED";
    type: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL";
    date: Date;
    createdAt: Date;
    description: string;
    userId: string;
    duration: number;
    isBillable: boolean;
    caseId?: string | undefined;
    taskId?: string | undefined;
    billableHours?: number | undefined;
    totalAmount?: number | undefined;
}, {
    id: string;
    status: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED";
    type: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL";
    date: Date;
    createdAt: Date;
    description: string;
    userId: string;
    duration: number;
    isBillable: boolean;
    caseId?: string | undefined;
    taskId?: string | undefined;
    billableHours?: number | undefined;
    totalAmount?: number | undefined;
}>;
export declare const WorklogWithUserSchema: z.ZodObject<{
    id: z.ZodString;
    userId: z.ZodString;
    caseId: z.ZodOptional<z.ZodString>;
    taskId: z.ZodOptional<z.ZodString>;
    subtaskId: z.ZodOptional<z.ZodString>;
    type: z.ZodDefault<z.ZodEnum<["CASE_WORK", "ADMIN_WORK", "RESEARCH", "MEETING", "TRAVEL", "OTHER"]>>;
    status: z.ZodDefault<z.ZodEnum<["DRAFT", "SUBMITTED", "APPROVED", "REJECTED"]>>;
    date: z.ZodDate;
    startTime: z.ZodString;
    endTime: z.ZodString;
    duration: z.ZodNumber;
    description: z.ZodString;
    activities: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    billableHours: z.ZodOptional<z.ZodNumber>;
    hourlyRate: z.ZodOptional<z.ZodNumber>;
    totalAmount: z.ZodOptional<z.ZodNumber>;
    location: z.ZodOptional<z.ZodString>;
    isBillable: z.ZodDefault<z.ZodBoolean>;
    isOvertime: z.ZodDefault<z.ZodBoolean>;
    attachments: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    notes: z.ZodOptional<z.ZodString>;
    approvedBy: z.ZodOptional<z.ZodString>;
    approvedAt: z.ZodOptional<z.ZodDate>;
    rejectionReason: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
} & {
    user: z.ZodObject<{
        id: z.ZodString;
        firstName: z.ZodString;
        lastName: z.ZodString;
        email: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    }, {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    }>;
}, "strip", z.ZodTypeAny, {
    user: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    };
    id: string;
    status: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED";
    type: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL";
    date: Date;
    createdAt: Date;
    updatedAt: Date;
    description: string;
    userId: string;
    duration: number;
    attachments: string[];
    startTime: string;
    endTime: string;
    activities: string[];
    isBillable: boolean;
    isOvertime: boolean;
    caseId?: string | undefined;
    notes?: string | undefined;
    approvedBy?: string | undefined;
    approvedAt?: Date | undefined;
    taskId?: string | undefined;
    subtaskId?: string | undefined;
    billableHours?: number | undefined;
    hourlyRate?: number | undefined;
    totalAmount?: number | undefined;
    location?: string | undefined;
    rejectionReason?: string | undefined;
}, {
    user: {
        id: string;
        email: string;
        firstName: string;
        lastName: string;
    };
    id: string;
    date: Date;
    createdAt: Date;
    updatedAt: Date;
    description: string;
    userId: string;
    duration: number;
    startTime: string;
    endTime: string;
    status?: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED" | undefined;
    type?: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL" | undefined;
    caseId?: string | undefined;
    notes?: string | undefined;
    approvedBy?: string | undefined;
    approvedAt?: Date | undefined;
    attachments?: string[] | undefined;
    taskId?: string | undefined;
    subtaskId?: string | undefined;
    activities?: string[] | undefined;
    billableHours?: number | undefined;
    hourlyRate?: number | undefined;
    totalAmount?: number | undefined;
    location?: string | undefined;
    isBillable?: boolean | undefined;
    isOvertime?: boolean | undefined;
    rejectionReason?: string | undefined;
}>;
export declare const WorklogWithCaseSchema: z.ZodObject<{
    id: z.ZodString;
    userId: z.ZodString;
    caseId: z.ZodOptional<z.ZodString>;
    taskId: z.ZodOptional<z.ZodString>;
    subtaskId: z.ZodOptional<z.ZodString>;
    type: z.ZodDefault<z.ZodEnum<["CASE_WORK", "ADMIN_WORK", "RESEARCH", "MEETING", "TRAVEL", "OTHER"]>>;
    status: z.ZodDefault<z.ZodEnum<["DRAFT", "SUBMITTED", "APPROVED", "REJECTED"]>>;
    date: z.ZodDate;
    startTime: z.ZodString;
    endTime: z.ZodString;
    duration: z.ZodNumber;
    description: z.ZodString;
    activities: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    billableHours: z.ZodOptional<z.ZodNumber>;
    hourlyRate: z.ZodOptional<z.ZodNumber>;
    totalAmount: z.ZodOptional<z.ZodNumber>;
    location: z.ZodOptional<z.ZodString>;
    isBillable: z.ZodDefault<z.ZodBoolean>;
    isOvertime: z.ZodDefault<z.ZodBoolean>;
    attachments: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    notes: z.ZodOptional<z.ZodString>;
    approvedBy: z.ZodOptional<z.ZodString>;
    approvedAt: z.ZodOptional<z.ZodDate>;
    rejectionReason: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
} & {
    case: z.ZodOptional<z.ZodObject<{
        id: z.ZodString;
        caseNumber: z.ZodString;
        title: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        caseNumber: string;
        title: string;
    }, {
        id: string;
        caseNumber: string;
        title: string;
    }>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED";
    type: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL";
    date: Date;
    createdAt: Date;
    updatedAt: Date;
    description: string;
    userId: string;
    duration: number;
    attachments: string[];
    startTime: string;
    endTime: string;
    activities: string[];
    isBillable: boolean;
    isOvertime: boolean;
    case?: {
        id: string;
        caseNumber: string;
        title: string;
    } | undefined;
    caseId?: string | undefined;
    notes?: string | undefined;
    approvedBy?: string | undefined;
    approvedAt?: Date | undefined;
    taskId?: string | undefined;
    subtaskId?: string | undefined;
    billableHours?: number | undefined;
    hourlyRate?: number | undefined;
    totalAmount?: number | undefined;
    location?: string | undefined;
    rejectionReason?: string | undefined;
}, {
    id: string;
    date: Date;
    createdAt: Date;
    updatedAt: Date;
    description: string;
    userId: string;
    duration: number;
    startTime: string;
    endTime: string;
    case?: {
        id: string;
        caseNumber: string;
        title: string;
    } | undefined;
    status?: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED" | undefined;
    type?: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL" | undefined;
    caseId?: string | undefined;
    notes?: string | undefined;
    approvedBy?: string | undefined;
    approvedAt?: Date | undefined;
    attachments?: string[] | undefined;
    taskId?: string | undefined;
    subtaskId?: string | undefined;
    activities?: string[] | undefined;
    billableHours?: number | undefined;
    hourlyRate?: number | undefined;
    totalAmount?: number | undefined;
    location?: string | undefined;
    isBillable?: boolean | undefined;
    isOvertime?: boolean | undefined;
    rejectionReason?: string | undefined;
}>;
export declare const WorklogWithTaskSchema: z.ZodObject<{
    id: z.ZodString;
    userId: z.ZodString;
    caseId: z.ZodOptional<z.ZodString>;
    taskId: z.ZodOptional<z.ZodString>;
    subtaskId: z.ZodOptional<z.ZodString>;
    type: z.ZodDefault<z.ZodEnum<["CASE_WORK", "ADMIN_WORK", "RESEARCH", "MEETING", "TRAVEL", "OTHER"]>>;
    status: z.ZodDefault<z.ZodEnum<["DRAFT", "SUBMITTED", "APPROVED", "REJECTED"]>>;
    date: z.ZodDate;
    startTime: z.ZodString;
    endTime: z.ZodString;
    duration: z.ZodNumber;
    description: z.ZodString;
    activities: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    billableHours: z.ZodOptional<z.ZodNumber>;
    hourlyRate: z.ZodOptional<z.ZodNumber>;
    totalAmount: z.ZodOptional<z.ZodNumber>;
    location: z.ZodOptional<z.ZodString>;
    isBillable: z.ZodDefault<z.ZodBoolean>;
    isOvertime: z.ZodDefault<z.ZodBoolean>;
    attachments: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
    notes: z.ZodOptional<z.ZodString>;
    approvedBy: z.ZodOptional<z.ZodString>;
    approvedAt: z.ZodOptional<z.ZodDate>;
    rejectionReason: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
} & {
    task: z.ZodOptional<z.ZodObject<{
        id: z.ZodString;
        title: z.ZodString;
        category: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        title: string;
        category: string;
    }, {
        id: string;
        title: string;
        category: string;
    }>>;
}, "strip", z.ZodTypeAny, {
    id: string;
    status: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED";
    type: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL";
    date: Date;
    createdAt: Date;
    updatedAt: Date;
    description: string;
    userId: string;
    duration: number;
    attachments: string[];
    startTime: string;
    endTime: string;
    activities: string[];
    isBillable: boolean;
    isOvertime: boolean;
    task?: {
        id: string;
        title: string;
        category: string;
    } | undefined;
    caseId?: string | undefined;
    notes?: string | undefined;
    approvedBy?: string | undefined;
    approvedAt?: Date | undefined;
    taskId?: string | undefined;
    subtaskId?: string | undefined;
    billableHours?: number | undefined;
    hourlyRate?: number | undefined;
    totalAmount?: number | undefined;
    location?: string | undefined;
    rejectionReason?: string | undefined;
}, {
    id: string;
    date: Date;
    createdAt: Date;
    updatedAt: Date;
    description: string;
    userId: string;
    duration: number;
    startTime: string;
    endTime: string;
    task?: {
        id: string;
        title: string;
        category: string;
    } | undefined;
    status?: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED" | undefined;
    type?: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL" | undefined;
    caseId?: string | undefined;
    notes?: string | undefined;
    approvedBy?: string | undefined;
    approvedAt?: Date | undefined;
    attachments?: string[] | undefined;
    taskId?: string | undefined;
    subtaskId?: string | undefined;
    activities?: string[] | undefined;
    billableHours?: number | undefined;
    hourlyRate?: number | undefined;
    totalAmount?: number | undefined;
    location?: string | undefined;
    isBillable?: boolean | undefined;
    isOvertime?: boolean | undefined;
    rejectionReason?: string | undefined;
}>;
export declare const WorklogApprovalSchema: z.ZodObject<{
    worklogId: z.ZodString;
    status: z.ZodEnum<["APPROVED", "REJECTED"]>;
    notes: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    status: "APPROVED" | "REJECTED";
    worklogId: string;
    notes?: string | undefined;
}, {
    status: "APPROVED" | "REJECTED";
    worklogId: string;
    notes?: string | undefined;
}>;
export declare const WorklogBulkUpdateSchema: z.ZodObject<{
    worklogIds: z.ZodArray<z.ZodString, "many">;
    status: z.ZodOptional<z.ZodEnum<["DRAFT", "SUBMITTED", "APPROVED", "REJECTED"]>>;
    isBillable: z.ZodOptional<z.ZodBoolean>;
    approvedBy: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    worklogIds: string[];
    status?: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED" | undefined;
    approvedBy?: string | undefined;
    isBillable?: boolean | undefined;
}, {
    worklogIds: string[];
    status?: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED" | undefined;
    approvedBy?: string | undefined;
    isBillable?: boolean | undefined;
}>;
export declare const WorklogTimesheetSchema: z.ZodObject<{
    userId: z.ZodString;
    startDate: z.ZodDate;
    endDate: z.ZodDate;
    worklogs: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        userId: z.ZodString;
        caseId: z.ZodOptional<z.ZodString>;
        taskId: z.ZodOptional<z.ZodString>;
        type: z.ZodEnum<["CASE_WORK", "ADMIN_WORK", "RESEARCH", "MEETING", "TRAVEL", "OTHER"]>;
        status: z.ZodEnum<["DRAFT", "SUBMITTED", "APPROVED", "REJECTED"]>;
        date: z.ZodDate;
        duration: z.ZodNumber;
        description: z.ZodString;
        billableHours: z.ZodOptional<z.ZodNumber>;
        totalAmount: z.ZodOptional<z.ZodNumber>;
        isBillable: z.ZodBoolean;
        createdAt: z.ZodDate;
    }, "strip", z.ZodTypeAny, {
        id: string;
        status: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED";
        type: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL";
        date: Date;
        createdAt: Date;
        description: string;
        userId: string;
        duration: number;
        isBillable: boolean;
        caseId?: string | undefined;
        taskId?: string | undefined;
        billableHours?: number | undefined;
        totalAmount?: number | undefined;
    }, {
        id: string;
        status: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED";
        type: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL";
        date: Date;
        createdAt: Date;
        description: string;
        userId: string;
        duration: number;
        isBillable: boolean;
        caseId?: string | undefined;
        taskId?: string | undefined;
        billableHours?: number | undefined;
        totalAmount?: number | undefined;
    }>, "many">;
    totalHours: z.ZodNumber;
    billableHours: z.ZodNumber;
    totalAmount: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    userId: string;
    endDate: Date;
    billableHours: number;
    totalAmount: number;
    startDate: Date;
    worklogs: {
        id: string;
        status: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED";
        type: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL";
        date: Date;
        createdAt: Date;
        description: string;
        userId: string;
        duration: number;
        isBillable: boolean;
        caseId?: string | undefined;
        taskId?: string | undefined;
        billableHours?: number | undefined;
        totalAmount?: number | undefined;
    }[];
    totalHours: number;
}, {
    userId: string;
    endDate: Date;
    billableHours: number;
    totalAmount: number;
    startDate: Date;
    worklogs: {
        id: string;
        status: "DRAFT" | "APPROVED" | "REJECTED" | "SUBMITTED";
        type: "OTHER" | "CASE_WORK" | "ADMIN_WORK" | "RESEARCH" | "MEETING" | "TRAVEL";
        date: Date;
        createdAt: Date;
        description: string;
        userId: string;
        duration: number;
        isBillable: boolean;
        caseId?: string | undefined;
        taskId?: string | undefined;
        billableHours?: number | undefined;
        totalAmount?: number | undefined;
    }[];
    totalHours: number;
}>;
export declare const WorklogStatisticsSchema: z.ZodObject<{
    totalHours: z.ZodNumber;
    billableHours: z.ZodNumber;
    nonBillableHours: z.ZodNumber;
    overtimeHours: z.ZodNumber;
    totalAmount: z.ZodNumber;
    byType: z.ZodRecord<z.ZodString, z.ZodNumber>;
    byStatus: z.ZodObject<{
        draft: z.ZodNumber;
        submitted: z.ZodNumber;
        approved: z.ZodNumber;
        rejected: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        draft: number;
        approved: number;
        rejected: number;
        submitted: number;
    }, {
        draft: number;
        approved: number;
        rejected: number;
        submitted: number;
    }>;
    averageDailyHours: z.ZodNumber;
    mostProductiveDay: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    byType: Record<string, number>;
    billableHours: number;
    totalAmount: number;
    totalHours: number;
    nonBillableHours: number;
    overtimeHours: number;
    byStatus: {
        draft: number;
        approved: number;
        rejected: number;
        submitted: number;
    };
    averageDailyHours: number;
    mostProductiveDay?: string | undefined;
}, {
    byType: Record<string, number>;
    billableHours: number;
    totalAmount: number;
    totalHours: number;
    nonBillableHours: number;
    overtimeHours: number;
    byStatus: {
        draft: number;
        approved: number;
        rejected: number;
        submitted: number;
    };
    averageDailyHours: number;
    mostProductiveDay?: string | undefined;
}>;
export type Worklog = z.infer<typeof WorklogSchema>;
export type CreateWorklog = z.infer<typeof CreateWorklogSchema>;
export type UpdateWorklog = z.infer<typeof UpdateWorklogSchema>;
export type WorklogSearch = z.infer<typeof WorklogSearchSchema>;
export type WorklogList = z.infer<typeof WorklogListSchema>;
export type WorklogWithUser = z.infer<typeof WorklogWithUserSchema>;
export type WorklogWithCase = z.infer<typeof WorklogWithCaseSchema>;
export type WorklogWithTask = z.infer<typeof WorklogWithTaskSchema>;
export type WorklogApproval = z.infer<typeof WorklogApprovalSchema>;
export type WorklogBulkUpdate = z.infer<typeof WorklogBulkUpdateSchema>;
export type WorklogTimesheet = z.infer<typeof WorklogTimesheetSchema>;
export type WorklogStatistics = z.infer<typeof WorklogStatisticsSchema>;
//# sourceMappingURL=worklog.d.ts.map